Index: src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.algorithm_jfx;\r\n\r\nimport javafx.animation.*;\r\nimport javafx.application.Application;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.skin.ButtonSkin;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.util.Random;\r\n\r\n\r\n\r\n\r\npublic class StudentGradeTrackerProject extends Application {\r\n\r\n    public static final int StdNum = 5;\r\n    static Student[] students;\r\n    HBox[] hBoxes;\r\n    ObservableList<String> sortingName;\r\n    ComboBox<String> sortingAlgorithmComboBox;\r\n    public AnimationStage animationStage;\r\n    Scene scene1;\r\n    Scene scene2;\r\n    Scene scene3;\r\n    private static final int MAX_GRADE = 100;\r\n    private HBox hbox;\r\n    private int step;\r\n    private int visualizationStep = 0;\r\n    int counter;\r\n    private boolean sortingActive;\r\n    private static final int RECTANGLE_WIDTH = 75;\r\n private GridPane gridPane;\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) {\r\n        sortingName = FXCollections.observableArrayList(\"selection\", \"bubble\",\"cycle\");\r\n        students = new Student[StdNum];\r\nRandom random =new Random();\r\n        for (int i = 0; i < StdNum; i++) {\r\n            students[i] = new Student(\"Student\"+ (i+1) ,(int)(Math.random() * MAX_GRADE));\r\n        }\r\n\r\n        gridPane=new GridPane();\r\n        DrawGridPane(gridPane);\r\n\r\n        hbox = new HBox();\r\n        hbox.setAlignment(Pos.CENTER);\r\n        hbox.setSpacing(10);\r\n        hbox.setPadding(new Insets(10));\r\n\r\n//        animationStage=new AnimationStage();\r\n//        animationStage.hbox=new HBox();\r\n//        animationStage.hbox.setAlignment(Pos.CENTER);\r\n//        animationStage.hbox.setStyle(\"-fx-border-color: black;\");\r\n//        animationStage.drawStudents(students);\r\n\r\n       // Collections.shuffle(List.of(students));\r\n\r\n        // Create buttons and combo box\r\n        Button sortButton = new Button(\"Sort\");\r\n        Button shuffleButton = new Button(\"Shuffle\");\r\n        sortingAlgorithmComboBox = new ComboBox<>(sortingName);\r\n        sortingAlgorithmComboBox.setPromptText(\"Select sorting algorithm\");\r\n\r\n        sortButton.setOnAction(event -> {\r\n            String selectedItem = sortingAlgorithmComboBox.getValue();\r\n            if (selectedItem != null) {\r\n                if (selectedItem.equals(\"selection\")) {\r\n                    sortingActive = true;\r\n                    startSorting(\"Selection Sort\");\r\n                    Button b1=new Button(\"back\");\r\n                    b1.setStyle(\"-fx-background-color: #D3D3D3;-fx-text-fill: Black;\");\r\n\r\n                    GridPane g1=new GridPane();\r\n                    g1.getChildren().addAll(hbox,b1);\r\n\r\n                    g1.setAlignment(Pos.BOTTOM_CENTER);\r\n                    primaryStage.setScene(scene2=new Scene(g1,RECTANGLE_WIDTH*StdNum*3,400));\r\n                    primaryStage.show();\r\n                    b1.setOnAction(actionEvent -> {\r\n                        primaryStage.setScene(scene1);\r\n                        DrawGridPane(gridPane);\r\n                    });\r\n                } else if (selectedItem.equals(\"bubble\")) {\r\n                    sortingActive = true;\r\n                    startSorting(\"Bubble Sort\");\r\n                    Button b1=new Button(\"back\");\r\n                    GridPane g1=new GridPane();\r\n                    g1.getChildren().addAll(hbox,b1);\r\n                    g1.setAlignment(Pos.BOTTOM_CENTER);\r\n                    primaryStage.setScene(scene2=new Scene(g1, 500,400));\r\n                    primaryStage.show();\r\n                    b1.setOnAction(actionEvent -> {\r\n                        primaryStage.setScene(scene1);\r\n                        DrawGridPane(gridPane);\r\n                    });\r\n                }\r\n                else if (selectedItem.equals(\"cycle\")) {\r\n                    sortingActive = true;\r\n                    startSorting(\"Bubble Sort\");\r\n                    Button b1=new Button(\"back\");\r\n                    GridPane g1=new GridPane();\r\n                    g1.getChildren().addAll(hbox,b1);\r\n                    g1.setAlignment(Pos.BOTTOM_CENTER);\r\n                    primaryStage.setScene(scene3=new Scene(g1, 500,400));\r\n                    primaryStage.show();\r\n                    b1.setOnAction(actionEvent -> {\r\n                        primaryStage.setScene(scene1);\r\n                        DrawGridPane(gridPane);\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                System.out.println(\"No sorting algorithm selected.\");\r\n            }\r\n        });\r\n\r\n        shuffleButton.setOnAction(event -> {\r\n            sortingActive = false;\r\n            shuffleStudents();\r\n            DrawGridPane(gridPane);\r\n            drawStudents();\r\n        });\r\n\r\n        // Layout configuration for buttons and combo box\r\n        HBox controlButtons = new HBox(sortingAlgorithmComboBox, sortButton, shuffleButton);\r\n        controlButtons.setAlignment(Pos.CENTER);\r\n        controlButtons.setSpacing(20);\r\n\r\n        // Create bottom layout for buttons\r\n        BorderPane bottomLayout = new BorderPane();\r\n        bottomLayout.setCenter(controlButtons);\r\n        bottomLayout.setPadding(new Insets(10));\r\n\r\n        // Create main BorderPane to hold grid and buttons\r\n        BorderPane root = new BorderPane();\r\n        root.setBottom(bottomLayout);\r\n        root.setCenter(gridPane);\r\n\r\n        scene1 = new Scene(root, 500, 400);\r\n        primaryStage.setScene(scene1);\r\n        primaryStage.show();\r\n\r\n    }\r\n\r\n//    private void animateBubbleSort(ArrayList<studentTracker> students) {\r\n//        Timeline timeline = new Timeline();\r\n//        boolean swapped;\r\n//        do {\r\n//            swapped = false;\r\n//            for (int i = 0; i < students.size() - 1; i++) {\r\n//                if (students.get(i).getGrade() > students.get(i + 1).getGrade()) {\r\n//                    Collections.swap(students, i, i + 1);\r\n//\r\n//                    swapped = true;\r\n//                }\r\n//            }\r\n//        } while (swapped);\r\n//        timeline.play();\r\n//    }\r\n//\r\n//\r\n//    private void animateSelectionSort(ArrayList<studentTracker> students) {\r\n//        for (int i = 0; i < students.size() - 1; i++) {\r\n//            int minIndex = i;\r\n//            int swapIndex=minIndex;\r\n//            for (int j = i + 1; j < students.size(); j++) {\r\n//                if (students.get(j).getGrade() < students.get(minIndex).getGrade()) {\r\n//                    swapIndex = j;\r\n//                } else if (students.get(j).getGrade() > students.get(minIndex).getGrade()) {\r\n//                    continue;\r\n//                }\r\n//                else\r\n//                {\r\n//                    break;\r\n//                }\r\n//            }\r\n//            if (swapIndex == minIndex){\r\n//                break;\r\n//            }\r\n//            if(minIndex!=swapIndex) {\r\n//              AnimationSelectionGrades(minIndex,swapIndex);\r\n//\r\n//\r\n//            }\r\n//        }\r\n//\r\n//\r\n//    }\r\n\r\n\r\n    public GridPane DrawGridPane (GridPane gridPane){\r\n\r\n        gridPane.setPadding(new Insets(10));\r\n        gridPane.setHgap(20);\r\n        gridPane.setVgap(10);\r\n\r\n        Label nameLabel = new Label(\"Student Name\");\r\n        Label gradeLabel = new Label(\"Grade\");\r\n        HBox h1 = new HBox();\r\n        h1.getChildren().addAll(nameLabel, gradeLabel);\r\n        nameLabel.setStyle(\"-fx-font-weight: bold;\");\r\n        gradeLabel.setStyle(\"-fx-font-weight: bold;\");\r\n        h1.setSpacing(50);\r\n        gridPane.getChildren().addAll(h1);\r\n        hBoxes = new HBox[StdNum];\r\n\r\n        for (int i = 0; i < StdNum; i++) {\r\n//            students[i].setName(\"Student\"+\"i\");\r\n//            students[i].setGrade((int) (Math.random() * StdNum));\r\n            Label studentNameLabel = new Label(students[i].getName());\r\n            Label gradeLabelValue = new Label(Integer.toString(students[i].getGrade()));\r\n            HBox hBox = new HBox();\r\n            hBox.getChildren().addAll(studentNameLabel, gradeLabelValue);\r\n            hBox.setSpacing(85);\r\n            hBoxes[i] = hBox;\r\n            gridPane.add(hBox, 0, i + 1);\r\n            if (i % 2 == 0) {\r\n                hBox.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, null, null)));\r\n            } else {\r\n                hBox.setBackground(new Background(new BackgroundFill(Color.WHITE, null, null)));\r\n            }\r\n        }\r\nreturn gridPane;\r\n    }\r\n    public void AnimationSelectionGrades(Integer minIndex,Integer swapIndex){\r\n        Timeline timeline=new Timeline(new KeyFrame(Duration.millis(1),actionEvent ->{\r\n            for (int i=0;i<students.length;i++) {\r\n                hBoxes[minIndex].setBackground(new Background(new BackgroundFill(Color.RED, CornerRadii.EMPTY, Insets.EMPTY)));\r\n\r\n                HBox temp = hBoxes[minIndex];\r\n                hBoxes[minIndex] = hBoxes[swapIndex];\r\n                hBoxes[swapIndex] = temp;\r\n                hBoxes[minIndex].setBackground(new Background(new BackgroundFill(Color.GREEN, CornerRadii.EMPTY, Insets.EMPTY)));\r\n\r\n            }\r\n\r\n        } ));\r\ntimeline.setCycleCount(students.length);\r\ntimeline.play();\r\n    }\r\n\r\n    private void drawStudents() {\r\n        hbox.getChildren().clear();\r\n        for (int i = 0; i < StdNum; i++) {\r\n            Student student = students[i];\r\n            Rectangle rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.LIGHTGREY);\r\n            Text text = new Text(student.getName() + \" (\" + student.getGrade() + \")\");\r\n            text.setFill(Color.BLACK);\r\n            StackPane stackPane = new StackPane(rectangle, text);\r\n            stackPane.setAlignment(Pos.BOTTOM_CENTER);\r\n            hbox.getChildren().add(stackPane);\r\n        }\r\n    }\r\n\r\n    private void drawStudentsComparing(int firstInd, int secondInd) {\r\n        hbox.getChildren().clear();\r\n        for (int i = 0; i < StdNum; i++) {\r\n            Student student = students[i];\r\n\r\n            Rectangle rectangle = null;\r\n            //Coloring\r\n            if(i != firstInd & i != secondInd){\r\n                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.LIGHTGREY);\r\n            } else if (i == firstInd) {\r\n                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.RED);\r\n            }else if(i == secondInd){\r\n                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.BLUE);\r\n            }\r\n\r\n\r\n\r\n            Text text = new Text(student.getName() + \" (\" + student.getGrade() + \")\");\r\n            text.setFill(Color.BLACK);\r\n            StackPane stackPane = new StackPane(rectangle, text);\r\n            stackPane.setAlignment(Pos.BOTTOM_CENTER);\r\n            hbox.getChildren().add(stackPane);\r\n        }\r\n    }\r\n\r\n    private void drawStudentsComparingJustBeforeSwapping(int firstInd, int secondInd) {\r\n        hbox.getChildren().clear();\r\n        for (int i = 0; i < StdNum; i++) {\r\n            Student student = students[i];\r\n\r\n            Rectangle rectangle;\r\n            //Coloring\r\n            if(i != firstInd & i != secondInd){\r\n                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.LIGHTGREY);\r\n            } else {\r\n                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.RED);\r\n            }\r\n\r\n\r\n\r\n            Text text = new Text(student.getName() + \" (\" + student.getGrade() + \")\");\r\n            text.setFill(Color.BLACK);\r\n            StackPane stackPane = new StackPane(rectangle, text);\r\n            stackPane.setAlignment(Pos.BOTTOM_CENTER);\r\n            hbox.getChildren().add(stackPane);\r\n        }\r\n    }\r\n\r\n\r\n    private void drawStudentsJustAfterSwapping(int firstInd, int secondInd) {\r\n        hbox.getChildren().clear();\r\n        for (int i = 0; i < StdNum; i++) {\r\n            Student student = students[i];\r\n\r\n            Rectangle rectangle;\r\n            //Coloring\r\n            if(i != firstInd & i != secondInd){\r\n                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.LIGHTGREY);\r\n            } else {\r\n                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.GREEN);\r\n            }\r\n\r\n\r\n\r\n            Text text = new Text(student.getName() + \" (\" + student.getGrade() + \")\");\r\n            text.setFill(Color.BLACK);\r\n            StackPane stackPane = new StackPane(rectangle, text);\r\n            stackPane.setAlignment(Pos.BOTTOM_CENTER);\r\n            hbox.getChildren().add(stackPane);\r\n        }\r\n    }\r\n\r\n\r\n    private void startSorting(String sortingType) {\r\n        Timeline timeline = new Timeline(\r\n                new KeyFrame(Duration.seconds(0.5), e -> {\r\n                    if (sortingActive && step < StdNum) {\r\n                        if (sortingType.equals(\"Selection Sort\")) {\r\n                            selectionSortStep();\r\n                        } else if (sortingType.equals(\"Bubble Sort\")) {\r\n                            bubbleSortStep();\r\n                        }else if(sortingType.equals(\"Cycle Sort\")) {\r\n                            cycleSortStep();\r\n                        }\r\n                        drawStudents();\r\n                        System.out.println(step);\r\n                        step++;\r\n\r\n                    }\r\n                })\r\n        );\r\n        timeline.setCycleCount(StdNum);\r\n        timeline.play();\r\n    }\r\n\r\n    private void shuffleStudents() {\r\n        // Shuffle students array\r\n        for (int i = 0; i < StdNum; i++) {\r\n            int randomIndex = (int) (Math.random() * StdNum);\r\n            Student temp = students[i];\r\n            students[i] = students[randomIndex];\r\n            students[randomIndex] = temp;\r\n        }\r\n        step = 0;\r\n    }\r\n\r\n    private void selectionSortStep() {\r\n        int minIndex = step;\r\n        for (int i = step + 1; i < StdNum; i++) {\r\n            if (students[i].getGrade() < students[minIndex].getGrade()) {\r\n                minIndex = i;\r\n            }\r\n        }\r\n        // Swap\r\n        Student temp = students[minIndex];\r\n        students[minIndex] = students[step];\r\n        students[step] = temp;\r\n    }\r\n\r\n    private void selectionSortStepVisualization() {\r\n        counter = visualizationStep+1;\r\n        final int[] minIndex = {visualizationStep};\r\n        Timeline timeline = new Timeline(\r\n                new KeyFrame(Duration.seconds(1), e -> {\r\n\r\n                    if(counter<StdNum){\r\n                        drawStudentsComparing(visualizationStep, counter);\r\n                        if (students[counter].getGrade() < students[minIndex[0]].getGrade()) {\r\n                            minIndex[0] = counter;\r\n                        }\r\n                    }\r\n\r\n                    System.out.println(\"before adding \"+counter);\r\n                    counter++;\r\n                    System.out.println(\"after adding \"+counter);\r\n\r\n                    System.out.println(\"min Index \"+ minIndex[0]);\r\n\r\n                    if(counter > (StdNum)){\r\n\r\n                        if(counter == (StdNum+1)){\r\n                            drawStudentsComparingJustBeforeSwapping(visualizationStep, minIndex[0]);\r\n\r\n                        }\r\n\r\n                        if(counter == (StdNum+2)) {\r\n                            Student temp = students[minIndex[0]];\r\n                            students[minIndex[0]] = students[visualizationStep];\r\n                            students[visualizationStep] = temp;\r\n                            drawStudentsJustAfterSwapping(0, minIndex[0]);\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                })\r\n        );\r\n        timeline.setCycleCount(StdNum+1);\r\n        timeline.play();\r\n\r\n//        if(counter == (ARRAY_SIZE+2)) {\r\n//            visualizationStep += 1;\r\n//        }\r\n\r\n//        int minIndex = visualizationStep;\r\n//        for (int i = visualizationStep + 1; i < ARRAY_SIZE; i++) {\r\n//            if (students[i].getGrade() < students[minIndex].getGrade()) {\r\n//                minIndex = i;\r\n//            }\r\n//        }\r\n//        drawStudentsComparingJustBeforeSwapping(0,minIndex);\r\n//\r\n//        // Swap\r\n//        Student temp = students[minIndex];\r\n//        students[minIndex] = students[visualizationStep];\r\n//        students[visualizationStep] = temp;\r\n//\r\n//        drawStudentsJustAfterSwapping(0, minIndex);\r\n\r\n    }\r\n    private void bubbleSortStep() {\r\n        if (step < StdNum - 1) {\r\n            for (int j = 0; j < StdNum - step - 1; j++) {\r\n                if (students[j].getGrade() > students[j + 1].getGrade()) {\r\n                    // Swap\r\n                    Student temp = students[j];\r\n                    students[j] = students[j + 1];\r\n                    students[j + 1] = temp;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private void cycleSortStep() {\r\n        int writes = 0;\r\n\r\n        // Traverse array elements and put them in the right place\r\n        for (int cycleStart = 0; cycleStart < StdNum - 1; cycleStart++) {\r\n            int item = students[cycleStart].getGrade();\r\n            int pos = cycleStart;\r\n\r\n            // Find position where we put the element which is currently at cycleStart\r\n            for (int i = cycleStart + 1; i < StdNum; i++) {\r\n                if (students[i].getGrade() < item) {\r\n                    pos++;\r\n                }\r\n            }\r\n\r\n            // If the item is already in the correct position, skip\r\n            if (pos == cycleStart) {\r\n                continue;\r\n            }\r\n\r\n            // Skip elements that are already sorted\r\n            while (item == students[pos].getGrade()) {\r\n                pos++;\r\n            }\r\n\r\n            // Move the item to its correct position\r\n            if (pos != cycleStart) {\r\n                int temp = students[pos].getGrade();\r\n                students[pos].setGrade(item);\r\n                item = temp;\r\n                writes++;\r\n            }\r\n\r\n            // Rotate the rest of the cycle\r\n            while (pos != cycleStart) {\r\n                pos = cycleStart;\r\n                for (int i = cycleStart + 1; i < StdNum; i++) {\r\n                    if (students[i].getGrade() < item) {\r\n                        pos++;\r\n                    }\r\n                }\r\n\r\n                // Skip elements that are already sorted\r\n                while (item == students[pos].getGrade()) {\r\n                    pos++;\r\n                }\r\n\r\n                // Move the item to its correct position\r\n                if (item != students[pos].getGrade()) {\r\n                    int temp = students[pos].getGrade();\r\n                    students[pos].setGrade(item);\r\n                    item = temp;\r\n                    writes++;\r\n                }\r\n            }\r\n\r\n            // Update GUI\r\n            drawStudents();\r\n        }\r\n    }\r\n    //\r\n\r\n    private void cycleSortStepVisualization() {\r\n        counter = visualizationStep + 1;\r\n        final int[] minIndex = {visualizationStep};\r\n\r\n        Timeline timeline = new Timeline(\r\n                new KeyFrame(Duration.seconds(1), e -> {\r\n                    int writes = 0;\r\n                    int item = students[visualizationStep].getGrade();\r\n                    int pos = visualizationStep;\r\n\r\n                    // Find position where we put the element which is currently at visualizationStep\r\n                    for (int i = visualizationStep + 1; i < StdNum; i++) {\r\n                        if (students[i].getGrade() < item) {\r\n                            pos++;\r\n                        }\r\n                    }\r\n\r\n                    // If the item is already in the correct position, skip\r\n                    if (pos == visualizationStep) {\r\n                        counter++;\r\n                        return;\r\n                    }\r\n\r\n                    // Skip elements that are already sorted\r\n                    while (item == students[pos].getGrade()) {\r\n                        pos++;\r\n                    }\r\n\r\n                    // Move the item to its correct position\r\n                    if (pos != visualizationStep) {\r\n                        Student temp = students[pos];\r\n                        students[pos] = new Student(\"Default Name\", item); // Instantiate new Student with a default name\r\n                        item = temp.getGrade();\r\n                        writes++;\r\n                    }\r\n\r\n                    // Rotate the rest of the cycle\r\n                    while (pos != visualizationStep) {\r\n                        pos = visualizationStep;\r\n                        for (int i = visualizationStep + 1; i < StdNum; i++) {\r\n                            if (students[i].getGrade() < item) {\r\n                                pos++;\r\n                            }\r\n                        }\r\n\r\n                        // Skip elements that are already sorted\r\n                        while (item == students[pos].getGrade()) {\r\n                            pos++;\r\n                        }\r\n\r\n                        // Move the item to its correct position\r\n                        if (item != students[pos].getGrade()) {\r\n                            Student temp = students[pos];\r\n                            students[pos] = new Student(\"Default Name\", item); // Instantiate new Student with a default name\r\n                            item = temp.getGrade();\r\n                            writes++;\r\n                        }\r\n                    }\r\n\r\n                    // Update GUI\r\n                    drawStudents();\r\n\r\n                    System.out.println(\"before adding \" + counter);\r\n                    counter++;\r\n                    System.out.println(\"after adding \" + counter);\r\n\r\n                    System.out.println(\"min Index \" + minIndex[0]);\r\n\r\n                    // Perform visualization updates\r\n                    if (counter > StdNum) {\r\n                        if (counter == (StdNum + 1)) {\r\n                            drawStudentsComparingJustBeforeSwapping(visualizationStep, minIndex[0]);\r\n                        }\r\n\r\n                        if (counter == (StdNum + 2)) {\r\n                            Student temp = students[minIndex[0]];\r\n                            students[minIndex[0]] = students[visualizationStep];\r\n                            students[visualizationStep] = temp;\r\n                            drawStudentsJustAfterSwapping(0, minIndex[0]);\r\n                        }\r\n                    }\r\n                })\r\n        );\r\n        timeline.setCycleCount(StdNum + 1);\r\n        timeline.play();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java b/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java
--- a/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ b/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java	(date 1715196480054)
@@ -6,6 +6,7 @@
 import javafx.collections.ObservableList;
 import javafx.geometry.Insets;
 import javafx.geometry.Pos;
+import javafx.scene.Node;
 import javafx.scene.Scene;
 import javafx.scene.control.Button;
 import javafx.scene.control.ComboBox;
@@ -21,8 +22,7 @@
 import javafx.util.Duration;
 
 import java.util.Random;
-
-
+import java.util.Stack;
 
 
 public class StudentGradeTrackerProject extends Application {
@@ -41,6 +41,7 @@
     private int step;
     private int visualizationStep = 0;
     int counter;
+    private int pivotInd;
     private boolean sortingActive;
     private static final int RECTANGLE_WIDTH = 75;
  private GridPane gridPane;
@@ -51,9 +52,9 @@
 
     @Override
     public void start(Stage primaryStage) {
-        sortingName = FXCollections.observableArrayList("selection", "bubble","cycle");
+        sortingName = FXCollections.observableArrayList("selection", "bubble","cycle", "quick sort");
         students = new Student[StdNum];
-Random random =new Random();
+        Random random =new Random();
         for (int i = 0; i < StdNum; i++) {
             students[i] = new Student("Student"+ (i+1) ,(int)(Math.random() * MAX_GRADE));
         }
@@ -85,7 +86,7 @@
             if (selectedItem != null) {
                 if (selectedItem.equals("selection")) {
                     sortingActive = true;
-                    startSorting("Selection Sort");
+
                     Button b1=new Button("back");
                     b1.setStyle("-fx-background-color: #D3D3D3;-fx-text-fill: Black;");
 
@@ -98,10 +99,13 @@
                     b1.setOnAction(actionEvent -> {
                         primaryStage.setScene(scene1);
                         DrawGridPane(gridPane);
+
                     });
+                    startSorting("Selection Sort");
+
                 } else if (selectedItem.equals("bubble")) {
                     sortingActive = true;
-                    startSorting("Bubble Sort");
+
                     Button b1=new Button("back");
                     GridPane g1=new GridPane();
                     g1.getChildren().addAll(hbox,b1);
@@ -112,10 +116,28 @@
                         primaryStage.setScene(scene1);
                         DrawGridPane(gridPane);
                     });
+
+                    startSorting("Bubble Sort");
                 }
                 else if (selectedItem.equals("cycle")) {
                     sortingActive = true;
-                    startSorting("Bubble Sort");
+
+                    Button b1=new Button("back");
+                    GridPane g1=new GridPane();
+                    g1.getChildren().addAll(hbox,b1);
+                    g1.setAlignment(Pos.BOTTOM_CENTER);
+                    primaryStage.setScene(scene3=new Scene(g1, 500,400));
+                    primaryStage.show();
+                    b1.setOnAction(actionEvent -> {
+                        primaryStage.setScene(scene1);
+                        DrawGridPane(gridPane);
+                    });
+
+                    startSorting("Cycle Sort");
+                }
+                else if (selectedItem.equals("quick sort")) {
+                    sortingActive = true;
+
                     Button b1=new Button("back");
                     GridPane g1=new GridPane();
                     g1.getChildren().addAll(hbox,b1);
@@ -126,6 +148,8 @@
                         primaryStage.setScene(scene1);
                         DrawGridPane(gridPane);
                     });
+
+                    startSorting("Quick Sort");
                 }
 
             } else {
@@ -270,6 +294,26 @@
             hbox.getChildren().add(stackPane);
         }
     }
+
+    private void drawStudentsQuickSort() {
+        hbox.getChildren().clear();
+        for (int i = 0; i < StdNum; i++) {
+            Student student = students[i];
+            Rectangle rectangle;
+            if(pivotInd != i){
+                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.LIGHTGREY);
+            }
+            else{
+                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.BLUE);
+            }
+            Text text = new Text(student.getName() + " (" + student.getGrade() + ")");
+            text.setFill(Color.BLACK);
+
+            StackPane stackPane = new StackPane(rectangle, text);
+            stackPane.setAlignment(Pos.BOTTOM_CENTER);
+            hbox.getChildren().add(stackPane);
+        }
+    }
 
     private void drawStudentsComparing(int firstInd, int secondInd) {
         hbox.getChildren().clear();
@@ -346,26 +390,36 @@
 
     private void startSorting(String sortingType) {
         Timeline timeline = new Timeline(
-                new KeyFrame(Duration.seconds(0.5), e -> {
+                new KeyFrame(Duration.seconds(1), e -> {
                     if (sortingActive && step < StdNum) {
                         if (sortingType.equals("Selection Sort")) {
                             selectionSortStep();
-                        } else if (sortingType.equals("Bubble Sort")) {
+                        }else if (sortingType.equals("Bubble Sort")) {
                             bubbleSortStep();
                         }else if(sortingType.equals("Cycle Sort")) {
                             cycleSortStep();
+                        }else if(sortingType.equals("Quick Sort")) {
+                            quickSortStep(0, StdNum - 1);
                         }
-                        drawStudents();
+
+                        if(sortingType.equals("Quick Sort")) {
+                            drawStudentsQuickSort();
+                        }else{
+                            drawStudents();
+                        }
                         System.out.println(step);
                         step++;
 
                     }
                 })
         );
-        timeline.setCycleCount(StdNum);
+        timeline.setCycleCount(StdNum+1);
         timeline.play();
     }
 
+    private void quickSortStep(Student[] students, int low, int high) {
+    }
+
     private void shuffleStudents() {
         // Shuffle students array
         for (int i = 0; i < StdNum; i++) {
@@ -520,7 +574,7 @@
             }
 
             // Update GUI
-            drawStudents();
+            //drawStudents();
         }
     }
     //
@@ -612,4 +666,127 @@
         timeline.play();
     }
 
+//    public void quickSortStep(int[] arr, int low, int high) {
+//        if (low < high) {
+//            // Partition the array and get pivot index
+//            pivotInd = partition(arr, low, high);
+//
+//            // Recursively call quickSortStep on the sub-arrays
+//            quickSortStep(arr, low, pivotInd - 1);
+//            quickSortStep(arr, pivotInd + 1, high);
+//        }
+//    }
+//
+//    // Function to partition the array and return pivot index
+//    private static int partition(int[] arr, int low, int high) {
+//        int pivotValue = arr[low]; // Choosing the first element as pivot
+//        int left = low + 1;
+//        int right = high;
+//
+//        while (true) {
+//            // Move the left pointer to the right until it finds an element greater than pivot
+//            while (left <= right && arr[left] <= pivotValue)
+//                left++;
+//
+//            // Move the right pointer to the left until it finds an element smaller than pivot
+//            while (arr[right] >= pivotValue && right >= left)
+//                right--;
+//
+//            // If the pointers cross, break the loop
+//            if (right < left)
+//                break;
+//
+//            // Swap arr[left] and arr[right]
+//            int temp = arr[left];
+//            arr[left] = arr[right];
+//            arr[right] = temp;
+//        }
+//
+//        // Swap pivot with arr[right]
+//        arr[low] = arr[right];
+//        arr[right] = pivotValue;
+//
+//        // Return pivot index
+//        return right;
+//    }
+
+
+//     void swapStudents(int i, int j) {
+//        Student temp = students[i];
+//        students[i] = students[j];
+//        students[j] = temp;
+//    }
+//
+//    // Partition function to rearrange the array based on pivot element
+//     int partition(int low, int high) {
+//        int pivot = students[pivotInd].getGrade();
+//        int i = low - 1;
+//        for (int j = low; j < high; j++) {
+//            if (students[j].getGrade() < pivot) {
+//                i++;
+//                swapStudents(i, j);
+//            }
+//        }
+//        swapStudents(i + 1, high);
+//        return i + 1;
+//    }
+//
+//    // Quick sort step function
+//     void quickSortStep(int low, int high) {
+//        if (low < high) {
+//            // Partition the array
+//            int pi = partition(low, high);
+//
+//            // Recursively sort the subarrays
+//            quickSortStep(low, pi - 1);
+//            quickSortStep(pi + 1, high);
+//        }
+//    }
+
+    void swapStudents(int i, int j) {
+        Student temp = students[i];
+        students[i] = students[j];
+        students[j] = temp;
+    }
+
+    // Partition function to rearrange the array based on pivot element
+    int partition(int low, int high) {
+        int pivotInd = low + (high - low) / 2;
+        int pivot = students[pivotInd].getGrade();
+        int i = low - 1;
+        for (int j = low; j < high; j++) {
+            if (students[j].getGrade() < pivot) {
+                i++;
+                swapStudents(i, j);
+                drawStudentsQuickSort();
+            }
+        }
+        swapStudents(i + 1, high);
+        return i + 1;
+    }
+
+    // Quick sort function without recursion
+    void quickSortStep(int low, int high) {
+        pivotInd=StdNum-1;
+        Stack<Integer> stack = new Stack<>();
+        stack.push(low);
+        stack.push(high);
+
+        while (!stack.isEmpty()) {
+            high = stack.pop();
+            low = stack.pop();
+
+            int pi = partition(low, high);
+
+            if (pi - 1 > low) {
+                stack.push(low);
+                stack.push(pi - 1);
+            }
+
+            if (pi + 1 < high) {
+                stack.push(pi + 1);
+                stack.push(high);
+            }
+        }
+    }
 }
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_26_2024_10_30_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_26_2024_10_30_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_4_26_2024_10_30_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_4_26_2024_10_30_PM__Changes_.xml	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ /dev/null	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_4_26_2024_10_30_PM_[Changes]" date="1714159818391" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_26_2024_10_30_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 4/26/2024 10:30 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_8_03_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_8_03_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_8_03_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_8_03_PM__Changes_.xml	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ /dev/null	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_4_24_2024_8_03_PM_[Changes]" date="1713981880379" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_8_03_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 4/24/2024 8:03 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM_[Changes]/shelved.patch	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ /dev/null	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
@@ -1,226 +0,0 @@
-Index: src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.algorithm_jfx;\r\n\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.Timeline;\r\nimport javafx.application.Application;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Random;\r\n\r\npublic class StudentGradeTrackerProject extends Application {\r\n\r\n    ArrayList<studentTracker> students;\r\n    ObservableList<String> sortingName;\r\n    ComboBox<String> sortingAlgorithmComboBox;\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) {\r\n        sortingName = FXCollections.observableArrayList(\"selection\", \"bubble\");\r\n        students = new ArrayList<>();\r\n\r\n        Random random = new Random();\r\n        for (int i = 0; i < 10; i++) {\r\n            students.add(new studentTracker(\"Student\" + i, random.nextInt(100)));\r\n        }\r\n\r\n        Collections.shuffle(students);\r\n\r\n        // Create grid for student data\r\n        GridPane gridPane = new GridPane();\r\n        gridPane.setPadding(new Insets(10));\r\n        gridPane.setHgap(20);\r\n        gridPane.setVgap(10);\r\n\r\n        Label nameLabel = new Label(\"Student Name\");\r\n        Label gradeLabel = new Label(\"Grade\");\r\n        HBox h1=new HBox();\r\n        h1.getChildren().addAll(nameLabel,gradeLabel);\r\n\r\n\r\n        nameLabel.setStyle(\"-fx-font-weight: bold;\");\r\n        gradeLabel.setStyle(\"-fx-font-weight: bold;\");\r\n        h1.setSpacing(50);\r\n        gridPane.getChildren().addAll(h1);\r\n\r\n        // Populate grid with student data\r\n        for (int i = 0; i < students.size(); i++) {\r\n            Label studentNameLabel = new Label(students.get(i).getName());\r\n            Label gradeLabelValue = new Label(Integer.toString(students.get(i).getGrade()));\r\n            HBox hBox= new HBox();\r\n            hBox.getChildren().addAll(studentNameLabel, gradeLabelValue);\r\n            hBox.setSpacing(85);\r\n            gridPane.add(hBox, 0, i+1);\r\n            if (i % 2 == 0) {\r\n                hBox.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, null, null)));\r\n            } else {\r\n                hBox.setBackground(new Background(new BackgroundFill(Color.WHITE, null, null)));\r\n            }\r\n        }\r\n\r\n        // Create buttons and combo box\r\n        Button sortButton = new Button(\"Sort\");\r\n        Button shuffleButton = new Button(\"Shuffle\");\r\n        sortingAlgorithmComboBox = new ComboBox<>(sortingName);\r\n        sortingAlgorithmComboBox.setPromptText(\"Select sorting algorithm\");\r\n\r\n        sortButton.setOnAction(event -> {\r\n            String selectedItem = sortingAlgorithmComboBox.getValue();\r\n            if (selectedItem != null) {\r\n                if (selectedItem.equals(\"selection\")) {\r\n                    animateSelectionSort(gridPane);\r\n                } else if (selectedItem.equals(\"bubble\")) {\r\n                    animateBubbleSort(gridPane);\r\n                }\r\n            } else {\r\n                System.out.println(\"No sorting algorithm selected.\");\r\n            }\r\n        });\r\n\r\n        shuffleButton.setOnAction(event -> {\r\n            Collections.shuffle(students);\r\n            updateGridView(gridPane);\r\n        });\r\n\r\n        // Layout configuration for buttons and combo box\r\n        HBox controlButtons = new HBox(sortingAlgorithmComboBox, sortButton, shuffleButton);\r\n        controlButtons.setAlignment(Pos.CENTER);\r\n        controlButtons.setSpacing(20);\r\n\r\n        // Create bottom layout for buttons\r\n        BorderPane bottomLayout = new BorderPane();\r\n        bottomLayout.setCenter(controlButtons);\r\n        bottomLayout.setPadding(new Insets(10));\r\n\r\n        // Create main BorderPane to hold grid and buttons\r\n        BorderPane root = new BorderPane();\r\n        root.setCenter(gridPane);\r\n        root.setBottom(bottomLayout);\r\n\r\n        Scene scene = new Scene(root, 500, 400);\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n    }\r\n\r\n    private void animateBubbleSort(GridPane gridPane) {\r\n        Timeline timeline = new Timeline();\r\n        boolean swapped;\r\n        do {\r\n            swapped = false;\r\n            for (int i = 0; i < students.size() - 1; i++) {\r\n                if (students.get(i).getGrade() > students.get(i + 1).getGrade()) {\r\n                    Collections.swap(students, i, i + 1);\r\n                    updateGridView(gridPane);\r\n                    swapped = true;\r\n                }\r\n            }\r\n        } while (swapped);\r\n        timeline.play();\r\n    }\r\n\r\n    private void animateSelectionSort(GridPane gridPane) {\r\n        Timeline timeline = new Timeline();\r\n        for (int i = 0; i < students.size() - 1; i++) {\r\n            final int minIndex = i;\r\n            timeline.getKeyFrames().add(new KeyFrame(Duration.seconds(1), event -> {\r\n                int minAge = students.get(minIndex).getGrade();\r\n                int swapIndex = minIndex;\r\n                for (int j = minIndex + 1; j < students.size(); j++) {\r\n                    if (students.get(j).getGrade() < minAge) {\r\n                        minAge = students.get(j).getGrade();\r\n                        swapIndex = j;\r\n                    }\r\n                }\r\n                if (swapIndex != minIndex) {\r\n                    Collections.swap(students, minIndex, swapIndex);\r\n                    updateGridView(gridPane);\r\n                }\r\n            }));\r\n        }\r\n        timeline.play();\r\n    }\r\n\r\n    private void updateGridView(GridPane gridPane) {\r\n        // Clear existing content\r\n        gridPane.getChildren().clear();\r\n\r\n        // Recreate labels and populate grid with updated data\r\n        Label nameLabel = new Label(\"Student Name\");\r\n        Label gradeLabel = new Label(\"Grade\");\r\n        HBox h1=new HBox();\r\n        h1.getChildren().addAll(nameLabel,gradeLabel);\r\n\r\n        nameLabel.setStyle(\"-fx-font-weight: bold;\");\r\n        gradeLabel.setStyle(\"-fx-font-weight: bold;\");\r\n        h1.setSpacing(50);\r\n        gridPane.getChildren().addAll(h1);\r\n\r\n        // Populate grid with student data\r\n        for (int i = 0; i < students.size(); i++) {\r\n            Label studentNameLabel = new Label(students.get(i).getName());\r\n            Label gradeLabelValue = new Label(Integer.toString(students.get(i).getGrade()));\r\n            HBox hBox= new HBox();\r\n            hBox.getChildren().addAll(studentNameLabel, gradeLabelValue);\r\n            hBox.setSpacing(85);\r\n            gridPane.add(hBox, 0, i+1);\r\n\r\n            // Set background color based on row number\r\n            if (i % 2 == 0) {\r\n                hBox.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, null, null)));\r\n                //gradeLabelValue.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, null, null)));\r\n            } else {\r\n                hBox.setBackground(new Background(new BackgroundFill(Color.WHITE, null, null)));\r\n                //gradeLabelValue.setBackground(new Background(new BackgroundFill(Color.WHITE, null, null)));\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java b/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java
---- a/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java	(revision e510aa0c21667ca8d42b0d63439d1913a7a44a7b)
-+++ b/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java	(date 1713702977774)
-@@ -23,6 +23,7 @@
- public class StudentGradeTrackerProject extends Application {
- 
-     ArrayList<studentTracker> students;
-+    ArrayList<HBox> hBoxes ;
-     ObservableList<String> sortingName;
-     ComboBox<String> sortingAlgorithmComboBox;
- 
-@@ -66,6 +67,7 @@
-             HBox hBox= new HBox();
-             hBox.getChildren().addAll(studentNameLabel, gradeLabelValue);
-             hBox.setSpacing(85);
-+            hBoxes.add(hBox);
-             gridPane.add(hBox, 0, i+1);
-             if (i % 2 == 0) {
-                 hBox.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, null, null)));
-@@ -84,9 +86,9 @@
-             String selectedItem = sortingAlgorithmComboBox.getValue();
-             if (selectedItem != null) {
-                 if (selectedItem.equals("selection")) {
--                    animateSelectionSort(gridPane);
-+                    animateSelectionSort(students);
-                 } else if (selectedItem.equals("bubble")) {
--                    animateBubbleSort(gridPane);
-+                    animateBubbleSort(students);
-                 }
-             } else {
-                 System.out.println("No sorting algorithm selected.");
-@@ -94,8 +96,9 @@
-         });
- 
-         shuffleButton.setOnAction(event -> {
-+
-             Collections.shuffle(students);
--            updateGridView(gridPane);
-+            //updateGridView(gridPane);
-         });
- 
-         // Layout configuration for buttons and combo box
-@@ -118,7 +121,7 @@
-         primaryStage.show();
-     }
- 
--    private void animateBubbleSort(GridPane gridPane) {
-+    private void animateBubbleSort(ArrayList<studentTracker> students) {
-         Timeline timeline = new Timeline();
-         boolean swapped;
-         do {
-@@ -126,7 +129,7 @@
-             for (int i = 0; i < students.size() - 1; i++) {
-                 if (students.get(i).getGrade() > students.get(i + 1).getGrade()) {
-                     Collections.swap(students, i, i + 1);
--                    updateGridView(gridPane);
-+
-                     swapped = true;
-                 }
-             }
-@@ -134,7 +137,7 @@
-         timeline.play();
-     }
- 
--    private void animateSelectionSort(GridPane gridPane) {
-+    private void animateSelectionSort(ArrayList<studentTracker> students) {
-         Timeline timeline = new Timeline();
-         for (int i = 0; i < students.size() - 1; i++) {
-             final int minIndex = i;
-@@ -149,46 +152,12 @@
-                 }
-                 if (swapIndex != minIndex) {
-                     Collections.swap(students, minIndex, swapIndex);
--                    updateGridView(gridPane);
-+                    //updateGridView(gridPane);
-                 }
-             }));
-         }
-         timeline.play();
-     }
- 
--    private void updateGridView(GridPane gridPane) {
--        // Clear existing content
--        gridPane.getChildren().clear();
--
--        // Recreate labels and populate grid with updated data
--        Label nameLabel = new Label("Student Name");
--        Label gradeLabel = new Label("Grade");
--        HBox h1=new HBox();
--        h1.getChildren().addAll(nameLabel,gradeLabel);
--
--        nameLabel.setStyle("-fx-font-weight: bold;");
--        gradeLabel.setStyle("-fx-font-weight: bold;");
--        h1.setSpacing(50);
--        gridPane.getChildren().addAll(h1);
--
--        // Populate grid with student data
--        for (int i = 0; i < students.size(); i++) {
--            Label studentNameLabel = new Label(students.get(i).getName());
--            Label gradeLabelValue = new Label(Integer.toString(students.get(i).getGrade()));
--            HBox hBox= new HBox();
--            hBox.getChildren().addAll(studentNameLabel, gradeLabelValue);
--            hBox.setSpacing(85);
--            gridPane.add(hBox, 0, i+1);
--
--            // Set background color based on row number
--            if (i % 2 == 0) {
--                hBox.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, null, null)));
--                //gradeLabelValue.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, null, null)));
--            } else {
--                hBox.setBackground(new Background(new BackgroundFill(Color.WHITE, null, null)));
--                //gradeLabelValue.setBackground(new Background(new BackgroundFill(Color.WHITE, null, null)));
--            }
--        }
--    }
- 
- }
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"first visualization\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationRows.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;maryam22001&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"db847dad-5a20-4338-9d14-a04d79841591\" />\r\n        <option name=\"url\" value=\"https://github.com/anton-onsy/Algorithm_Jfx.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2emlBL7pLMOVOPrGbRhxaHbpkeT\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/20109/IdeaProjects/Algorithm_Jfx&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"\" />\r\n      <created>1712517499532</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712517499532</updated>\r\n      <workItem from=\"1713485617503\" duration=\"8423000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"first visualization\">\r\n      <created>1713122013284</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713122013284</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713505137751</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713505137753</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first visualization\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"first visualization\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision e510aa0c21667ca8d42b0d63439d1913a7a44a7b)
-+++ b/.idea/workspace.xml	(date 1713701438222)
-@@ -4,10 +4,8 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="44467efd-aa85-4cd1-86d0-790f797d3aff" name="Changes" comment="first visualization">
--      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-+    <list default="true" id="44467efd-aa85-4cd1-86d0-790f797d3aff" name="Changes" comment="put labels in hboxs for animation">
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationRows.java" beforeDir="false" />
-       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-@@ -51,24 +49,25 @@
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent">{
--  &quot;keyToString&quot;: {
--    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
--    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
--    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
--    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
--    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
--    &quot;last_opened_file_path&quot;: &quot;C:/Users/20109/IdeaProjects/Algorithm_Jfx&quot;,
--    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
--    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
--    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
--    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
--    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
--    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
--    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
--    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
-+  <component name="PropertiesComponent"><![CDATA[{
-+  "keyToString": {
-+    "RunOnceActivity.OpenProjectViewOnStart": "true",
-+    "RunOnceActivity.ShowReadmeOnStart": "true",
-+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-+    "WebServerToolWindowFactoryState": "false",
-+    "git-widget-placeholder": "master",
-+    "last_opened_file_path": "C:/Users/20109/IdeaProjects/Algorithm_Jfx",
-+    "node.js.detected.package.eslint": "true",
-+    "node.js.detected.package.tslint": "true",
-+    "node.js.selected.package.eslint": "(autodetect)",
-+    "node.js.selected.package.tslint": "(autodetect)",
-+    "project.structure.last.edited": "Project",
-+    "project.structure.proportion": "0.15",
-+    "project.structure.side.proportion": "0.0",
-+    "settings.editor.selected.configurable": "com.github.copilot.settings.ApplicationConfigurable",
-+    "vue.rearranger.settings.migration": "true"
-   }
--}</component>
-+}]]></component>
-   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-   <component name="TaskManager">
-     <task active="true" id="Default" summary="Default task">
-@@ -94,7 +93,21 @@
-       <option name="project" value="LOCAL" />
-       <updated>1713505137753</updated>
-     </task>
--    <option name="localTasksCounter" value="3" />
-+    <task id="LOCAL-00003" summary="put labels in hboxs for animation">
-+      <created>1713700424388</created>
-+      <option name="number" value="00003" />
-+      <option name="presentableId" value="LOCAL-00003" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1713700424388</updated>
-+    </task>
-+    <task id="LOCAL-00004" summary="put labels in hboxs for animation">
-+      <created>1713700439416</created>
-+      <option name="number" value="00004" />
-+      <option name="presentableId" value="LOCAL-00004" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1713700439416</updated>
-+    </task>
-+    <option name="localTasksCounter" value="5" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -113,6 +126,11 @@
-   </component>
-   <component name="VcsManagerConfiguration">
-     <MESSAGE value="first visualization" />
--    <option name="LAST_COMMIT_MESSAGE" value="first visualization" />
-+    <MESSAGE value="put labels in hboxs for animation" />
-+    <option name="LAST_COMMIT_MESSAGE" value="put labels in hboxs for animation" />
-+  </component>
-+  <component name="XSLT-Support.FileAssociations.UIState">
-+    <expand />
-+    <select />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ /dev/null	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM_[Changes]" date="1713805722971" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 4/22/2024 7:08 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_6_08_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_6_08_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_6_08_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_6_08_PM_[Changes]/shelved.patch	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ /dev/null	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
@@ -1,272 +0,0 @@
-Index: src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.algorithm_jfx;\r\n\r\nimport javafx.animation.*;\r\nimport javafx.application.Application;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.lang.reflect.Array;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Random;\r\n\r\n\r\n\r\npublic class StudentGradeTrackerProject extends Application {\r\n\r\n    public static final int StdNum = 3;\r\n    ArrayList<studentTracker> students;\r\n    HBox[] hBoxes;\r\n    ObservableList<String> sortingName;\r\n    ComboBox<String> sortingAlgorithmComboBox;\r\n\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) {\r\n        sortingName = FXCollections.observableArrayList(\"selection\", \"bubble\");\r\n        students = new ArrayList<>();\r\n\r\n        // Create grid for student data\r\n        GridPane gridPane = new GridPane();\r\n        gridPane.setPadding(new Insets(10));\r\n        gridPane.setHgap(20);\r\n        gridPane.setVgap(10);\r\n\r\n        Label nameLabel = new Label(\"Student Name\");\r\n        Label gradeLabel = new Label(\"Grade\");\r\n        HBox h1=new HBox();\r\n        h1.getChildren().addAll(nameLabel,gradeLabel);\r\n        nameLabel.setStyle(\"-fx-font-weight: bold;\");\r\n        gradeLabel.setStyle(\"-fx-font-weight: bold;\");\r\n        h1.setSpacing(50);\r\n        gridPane.getChildren().addAll(h1);\r\n        hBoxes=new HBox[StdNum];\r\n        Random random = new Random();\r\n        for (int i = 0; i < StdNum; i++) {\r\n            students.add(new studentTracker(\"Student\" + i, random.nextInt(100)));\r\n            Label studentNameLabel = new Label(students.get(i).getName());\r\n            Label gradeLabelValue = new Label(Integer.toString(students.get(i).getGrade()));\r\n            HBox hBox= new HBox();\r\n            hBox.getChildren().addAll(studentNameLabel, gradeLabelValue);\r\n            hBox.setSpacing(85);\r\n            hBoxes[i]=hBox;\r\n            gridPane.add(hBox, 0, i+1);\r\n            if (i % 2 == 0) {\r\n                hBox.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, null, null)));\r\n            } else {\r\n                hBox.setBackground(new Background(new BackgroundFill(Color.WHITE, null, null)));\r\n            }\r\n        }\r\n\r\n        Collections.shuffle(students);\r\n\r\n        // Create buttons and combo box\r\n        Button sortButton = new Button(\"Sort\");\r\n        Button shuffleButton = new Button(\"Shuffle\");\r\n        sortingAlgorithmComboBox = new ComboBox<>(sortingName);\r\n        sortingAlgorithmComboBox.setPromptText(\"Select sorting algorithm\");\r\n\r\n        sortButton.setOnAction(event -> {\r\n            String selectedItem = sortingAlgorithmComboBox.getValue();\r\n            if (selectedItem != null) {\r\n                if (selectedItem.equals(\"selection\")) {\r\n                    animateSelectionSort(students,gridPane);\r\n                } else if (selectedItem.equals(\"bubble\")) {\r\n                    animateBubbleSort(students);\r\n                }\r\n            } else {\r\n                System.out.println(\"No sorting algorithm selected.\");\r\n            }\r\n        });\r\n\r\n        shuffleButton.setOnAction(event -> {\r\n\r\n            Collections.shuffle(students);\r\n            //updateGridView(gridPane);\r\n        });\r\n\r\n        // Layout configuration for buttons and combo box\r\n        HBox controlButtons = new HBox(sortingAlgorithmComboBox, sortButton, shuffleButton);\r\n        controlButtons.setAlignment(Pos.CENTER);\r\n        controlButtons.setSpacing(20);\r\n\r\n        // Create bottom layout for buttons\r\n        BorderPane bottomLayout = new BorderPane();\r\n        bottomLayout.setCenter(controlButtons);\r\n        bottomLayout.setPadding(new Insets(10));\r\n\r\n        // Create main BorderPane to hold grid and buttons\r\n        BorderPane root = new BorderPane();\r\n        root.setCenter(gridPane);\r\n        root.setBottom(bottomLayout);\r\n\r\n        Scene scene = new Scene(root, 500, 400);\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n    }\r\n\r\n    private void animateBubbleSort(ArrayList<studentTracker> students) {\r\n        Timeline timeline = new Timeline();\r\n        boolean swapped;\r\n        do {\r\n            swapped = false;\r\n            for (int i = 0; i < students.size() - 1; i++) {\r\n                if (students.get(i).getGrade() > students.get(i + 1).getGrade()) {\r\n                    Collections.swap(students, i, i + 1);\r\n\r\n                    swapped = true;\r\n                }\r\n            }\r\n        } while (swapped);\r\n        timeline.play();\r\n    }\r\n\r\n\r\n\r\n\r\n    private void animateSelectionSort(ArrayList<studentTracker> students, GridPane gridPane) {\r\n        Timeline timeline = new Timeline();\r\n        timeline.setCycleCount(students.size());\r\n        for (int i = 0; i < students.size() - 1; i++) {\r\n            final int minIndex = i;\r\n            timeline.getKeyFrames().add(new KeyFrame(Duration.seconds(i), event -> {\r\n                int minGrade = students.get(minIndex).getGrade();\r\n                int swapIndex = minIndex;\r\n                for (int j = minIndex + 1; j < students.size(); j++) {\r\n                    if (students.get(j).getGrade() < minGrade) {\r\n                        System.out.println(\"area 1\");\r\n                        minGrade = students.get(j).getGrade();\r\n                        swapIndex = j;\r\n                    }\r\n                }\r\n                if (swapIndex != minIndex) {\r\n                    // Swap students\r\n                    System.out.println(\"area 2\");\r\n                    Collections.swap(students, minIndex, swapIndex);\r\n                    // Animate hBoxes\r\n                    TranslateTransition tt1 = new TranslateTransition(Duration.seconds(1), hBoxes[minIndex]);\r\n                    TranslateTransition tt2 = new TranslateTransition(Duration.seconds(1), hBoxes[swapIndex]);\r\n\r\n                    tt1.setToY((swapIndex - minIndex) * hBoxes[minIndex].getHeight());\r\n                    tt2.setToY((minIndex - swapIndex) * hBoxes[swapIndex].getHeight());\r\n                    tt1.play();\r\n                    tt2.play();\r\n\r\n                    int finalSwapIndex = swapIndex;\r\n                  tt1.setOnFinished(e -> {\r\n                        hBoxes[minIndex].setTranslateY(0);\r\n                        gridPane.getChildren().remove(hBoxes[minIndex]);\r\n                        gridPane.add(hBoxes[minIndex], 0, finalSwapIndex + 1);\r\n                    });\r\n                    tt2.setOnFinished(e -> {\r\n                        hBoxes[finalSwapIndex].setTranslateY(0);\r\n                        gridPane.getChildren().remove(hBoxes[finalSwapIndex]);\r\n                        gridPane.add(hBoxes[finalSwapIndex], 0, minIndex + 1);\r\n                    });\r\n                    // Swap hBoxes\r\n                    HBox temp = hBoxes[minIndex];\r\n                    hBoxes[minIndex] = hBoxes[swapIndex];\r\n                    hBoxes[swapIndex] = temp;\r\n                }\r\n            }));\r\n        }\r\n        timeline.play();\r\n    }\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java b/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java
---- a/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java	(revision 3d5f8f3333322d57d5f1f3f9d7ef3c63cadde826)
-+++ b/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java	(date 1713974866593)
-@@ -24,7 +24,7 @@
- 
- public class StudentGradeTrackerProject extends Application {
- 
--    public static final int StdNum = 3;
-+    public static final int StdNum = 10;
-     ArrayList<studentTracker> students;
-     HBox[] hBoxes;
-     ObservableList<String> sortingName;
-@@ -39,38 +39,8 @@
-     public void start(Stage primaryStage) {
-         sortingName = FXCollections.observableArrayList("selection", "bubble");
-         students = new ArrayList<>();
-+     GridPane gridPane=DrawGridPane(new GridPane());
- 
--        // Create grid for student data
--        GridPane gridPane = new GridPane();
--        gridPane.setPadding(new Insets(10));
--        gridPane.setHgap(20);
--        gridPane.setVgap(10);
--
--        Label nameLabel = new Label("Student Name");
--        Label gradeLabel = new Label("Grade");
--        HBox h1=new HBox();
--        h1.getChildren().addAll(nameLabel,gradeLabel);
--        nameLabel.setStyle("-fx-font-weight: bold;");
--        gradeLabel.setStyle("-fx-font-weight: bold;");
--        h1.setSpacing(50);
--        gridPane.getChildren().addAll(h1);
--        hBoxes=new HBox[StdNum];
--        Random random = new Random();
--        for (int i = 0; i < StdNum; i++) {
--            students.add(new studentTracker("Student" + i, random.nextInt(100)));
--            Label studentNameLabel = new Label(students.get(i).getName());
--            Label gradeLabelValue = new Label(Integer.toString(students.get(i).getGrade()));
--            HBox hBox= new HBox();
--            hBox.getChildren().addAll(studentNameLabel, gradeLabelValue);
--            hBox.setSpacing(85);
--            hBoxes[i]=hBox;
--            gridPane.add(hBox, 0, i+1);
--            if (i % 2 == 0) {
--                hBox.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, null, null)));
--            } else {
--                hBox.setBackground(new Background(new BackgroundFill(Color.WHITE, null, null)));
--            }
--        }
- 
-         Collections.shuffle(students);
- 
-@@ -84,7 +54,9 @@
-             String selectedItem = sortingAlgorithmComboBox.getValue();
-             if (selectedItem != null) {
-                 if (selectedItem.equals("selection")) {
--                    animateSelectionSort(students,gridPane);
-+                    gridPane.getChildren().clear();
-+                    animateSelectionSort(students);
-+                    DrawGridPane(gridPane);
-                 } else if (selectedItem.equals("bubble")) {
-                     animateBubbleSort(students);
-                 }
-@@ -94,9 +66,8 @@
-         });
- 
-         shuffleButton.setOnAction(event -> {
--
-             Collections.shuffle(students);
--            //updateGridView(gridPane);
-+
-         });
- 
-         // Layout configuration for buttons and combo box
-@@ -111,8 +82,8 @@
- 
-         // Create main BorderPane to hold grid and buttons
-         BorderPane root = new BorderPane();
-+        root.setBottom(bottomLayout);
-         root.setCenter(gridPane);
--        root.setBottom(bottomLayout);
- 
-         Scene scene = new Scene(root, 500, 400);
-         primaryStage.setScene(scene);
-@@ -136,56 +107,81 @@
-     }
- 
- 
--
--
--    private void animateSelectionSort(ArrayList<studentTracker> students, GridPane gridPane) {
--        Timeline timeline = new Timeline();
--        timeline.setCycleCount(students.size());
-+    private void animateSelectionSort(ArrayList<studentTracker> students) {
-         for (int i = 0; i < students.size() - 1; i++) {
--            final int minIndex = i;
--            timeline.getKeyFrames().add(new KeyFrame(Duration.seconds(i), event -> {
--                int minGrade = students.get(minIndex).getGrade();
--                int swapIndex = minIndex;
--                for (int j = minIndex + 1; j < students.size(); j++) {
--                    if (students.get(j).getGrade() < minGrade) {
--                        System.out.println("area 1");
--                        minGrade = students.get(j).getGrade();
--                        swapIndex = j;
--                    }
-+            int minIndex = i;
-+            int swapIndex=minIndex;
-+            for (int j = i + 1; j < students.size(); j++) {
-+                if (students.get(j).getGrade() < students.get(minIndex).getGrade()) {
-+                    swapIndex = j;
-+                } else if (students.get(j).getGrade() > students.get(minIndex).getGrade()) {
-+                    continue;
-+                }
-+                else
-+                {
-+                    break;
-                 }
--                if (swapIndex != minIndex) {
--                    // Swap students
--                    System.out.println("area 2");
--                    Collections.swap(students, minIndex, swapIndex);
--                    // Animate hBoxes
--                    TranslateTransition tt1 = new TranslateTransition(Duration.seconds(1), hBoxes[minIndex]);
--                    TranslateTransition tt2 = new TranslateTransition(Duration.seconds(1), hBoxes[swapIndex]);
-+            }
-+            if (swapIndex == minIndex){
-+                break;
-+            }
-+            if(minIndex!=swapIndex) {
-+              AnimationSelectionGrades(minIndex,swapIndex);
-+
-+
-+            }
-+        }
-+
- 
--                    tt1.setToY((swapIndex - minIndex) * hBoxes[minIndex].getHeight());
--                    tt2.setToY((minIndex - swapIndex) * hBoxes[swapIndex].getHeight());
--                    tt1.play();
--                    tt2.play();
-+    }
- 
--                    int finalSwapIndex = swapIndex;
--                  tt1.setOnFinished(e -> {
--                        hBoxes[minIndex].setTranslateY(0);
--                        gridPane.getChildren().remove(hBoxes[minIndex]);
--                        gridPane.add(hBoxes[minIndex], 0, finalSwapIndex + 1);
--                    });
--                    tt2.setOnFinished(e -> {
--                        hBoxes[finalSwapIndex].setTranslateY(0);
--                        gridPane.getChildren().remove(hBoxes[finalSwapIndex]);
--                        gridPane.add(hBoxes[finalSwapIndex], 0, minIndex + 1);
--                    });
--                    // Swap hBoxes
--                    HBox temp = hBoxes[minIndex];
--                    hBoxes[minIndex] = hBoxes[swapIndex];
--                    hBoxes[swapIndex] = temp;
--                }
--            }));
--        }
--        timeline.play();
--    }
-+
-+    public GridPane DrawGridPane (GridPane gridPane){
-+
-+        gridPane.setPadding(new Insets(10));
-+        gridPane.setHgap(20);
-+        gridPane.setVgap(10);
-+
-+        Label nameLabel = new Label("Student Name");
-+        Label gradeLabel = new Label("Grade");
-+        HBox h1 = new HBox();
-+        h1.getChildren().addAll(nameLabel, gradeLabel);
-+        nameLabel.setStyle("-fx-font-weight: bold;");
-+        gradeLabel.setStyle("-fx-font-weight: bold;");
-+        h1.setSpacing(50);
-+        gridPane.getChildren().addAll(h1);
-+        hBoxes = new HBox[StdNum];
-+        Random random = new Random();
-+        for (int i = 0; i < StdNum; i++) {
-+            students.add(new studentTracker("Student" + i, random.nextInt(100)));
-+            Label studentNameLabel = new Label(students.get(i).getName());
-+            Label gradeLabelValue = new Label(Integer.toString(students.get(i).getGrade()));
-+            HBox hBox = new HBox();
-+            hBox.getChildren().addAll(studentNameLabel, gradeLabelValue);
-+            hBox.setSpacing(85);
-+            hBoxes[i] = hBox;
-+            gridPane.add(hBox, 0, i + 1);
-+            if (i % 2 == 0) {
-+                hBox.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, null, null)));
-+            } else {
-+                hBox.setBackground(new Background(new BackgroundFill(Color.WHITE, null, null)));
-+            }
-+        }
-+return gridPane;
-+    }
-+    public void AnimationSelectionGrades(Integer minIndex,Integer swapIndex){
-+        Timeline timeline=new Timeline(new KeyFrame(Duration.millis(1),actionEvent ->{
-+            for (int i=0;i<students.size();i++) {
-+                hBoxes[minIndex].setBackground(new Background(new BackgroundFill(Color.RED, CornerRadii.EMPTY, Insets.EMPTY)));
-+
-+                HBox temp = hBoxes[minIndex];
-+                hBoxes[minIndex] = hBoxes[swapIndex];
-+                hBoxes[swapIndex] = temp;
-+                hBoxes[minIndex].setBackground(new Background(new BackgroundFill(Color.RED, CornerRadii.EMPTY, Insets.EMPTY)));
-+
-+            }
-+        } ));
- 
- 
--}
-+    }
-+}
-\ No newline at end of file
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"first visualization\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM_[Changes]1/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_1.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_03_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_03_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;maryam22001&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"db847dad-5a20-4338-9d14-a04d79841591\" />\r\n        <option name=\"url\" value=\"https://github.com/anton-onsy/Algorithm_Jfx.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2emlBL7pLMOVOPrGbRhxaHbpkeT\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/20109/IdeaProjects/Algorithm_Jfx&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.project.maven.repository.indices&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"\" />\r\n      <created>1712517499532</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712517499532</updated>\r\n      <workItem from=\"1713485617503\" duration=\"8423000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"first visualization\">\r\n      <created>1713122013284</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713122013284</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713505137751</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713505137753</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first visualization\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"first visualization\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 3d5f8f3333322d57d5f1f3f9d7ef3c63cadde826)
-+++ b/.idea/workspace.xml	(date 1713883283871)
-@@ -4,13 +4,7 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="44467efd-aa85-4cd1-86d0-790f797d3aff" name="Changes" comment="first visualization">
--      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM_[Changes]1/shelved.patch" beforeDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_1.xml" beforeDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_03_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_03_PM__Changes_.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml" afterDir="false" />
-+    <list default="true" id="44467efd-aa85-4cd1-86d0-790f797d3aff" name="Changes" comment="there was an error in animation">
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java" afterDir="false" />
-     </list>
-@@ -99,7 +93,14 @@
-       <option name="project" value="LOCAL" />
-       <updated>1713505137753</updated>
-     </task>
--    <option name="localTasksCounter" value="3" />
-+    <task id="LOCAL-00003" summary="there was an error in animation">
-+      <created>1713882743292</created>
-+      <option name="number" value="00003" />
-+      <option name="presentableId" value="LOCAL-00003" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1713882743292</updated>
-+    </task>
-+    <option name="localTasksCounter" value="4" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -118,6 +119,7 @@
-   </component>
-   <component name="VcsManagerConfiguration">
-     <MESSAGE value="first visualization" />
--    <option name="LAST_COMMIT_MESSAGE" value="first visualization" />
-+    <MESSAGE value="there was an error in animation" />
-+    <option name="LAST_COMMIT_MESSAGE" value="there was an error in animation" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM_[Changes]/shelved.patch	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ /dev/null	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
@@ -1,158 +0,0 @@
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_X\" default=\"true\" project-jdk-name=\"openjdk-22\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision e6f9ebddaff85f93acdba7952a38298387eddaaa)
-+++ b/.idea/misc.xml	(date 1713697717069)
-@@ -7,8 +7,9 @@
-         <option value="$PROJECT_DIR$/pom.xml" />
-       </list>
-     </option>
-+    <option name="workspaceImportForciblyTurnedOn" value="true" />
-   </component>
--  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">
-+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" project-jdk-name="20" project-jdk-type="JavaSDK">
-     <output url="file://$PROJECT_DIR$/out" />
-   </component>
- </project>
-\ No newline at end of file
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"first visualization\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\r\n  \"lastFilter\": {\r\n    \"state\": \"OPEN\",\r\n    \"assignee\": \"maryam22001\"\r\n  }\r\n}]]></component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"db847dad-5a20-4338-9d14-a04d79841591\" />\r\n        <option name=\"url\" value=\"https://github.com/anton-onsy/Algorithm_Jfx.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"ProjectErrors\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 1\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2emlBL7pLMOVOPrGbRhxaHbpkeT\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"last_opened_file_path\": \"C:/Users/20109/IdeaProjects/Algorithm_Jfx\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"\" />\r\n      <created>1712517499532</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712517499532</updated>\r\n      <workItem from=\"1713485617503\" duration=\"12141000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"first visualization\">\r\n      <created>1713122013284</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713122013284</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713505137751</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713505137753</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713546117004</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713546117004</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first visualization\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"first visualization\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision e6f9ebddaff85f93acdba7952a38298387eddaaa)
-+++ b/.idea/workspace.xml	(date 1713700442038)
-@@ -5,8 +5,8 @@
-   </component>
-   <component name="ChangeListManager">
-     <list default="true" id="44467efd-aa85-4cd1-86d0-790f797d3aff" name="Changes" comment="first visualization">
-+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -23,26 +23,9 @@
-   <component name="Git.Settings">
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-   </component>
--  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
--  "lastFilter": {
--    "state": "OPEN",
--    "assignee": "maryam22001"
--  }
--}]]></component>
--  <component name="GithubPullRequestsUISettings">
--    <option name="selectedUrlAndAccountId">
--      <UrlAndAccount>
--        <option name="accountId" value="db847dad-5a20-4338-9d14-a04d79841591" />
--        <option name="url" value="https://github.com/anton-onsy/Algorithm_Jfx.git" />
--      </UrlAndAccount>
--    </option>
--  </component>
--  <component name="ProblemsViewState">
--    <option name="selectedTabId" value="ProjectErrors" />
--  </component>
--  <component name="ProjectColorInfo"><![CDATA[{
--  "associatedIndex": 1
--}]]></component>
-+  <component name="ProjectColorInfo">{
-+  &quot;associatedIndex&quot;: 7
-+}</component>
-   <component name="ProjectId" id="2emlBL7pLMOVOPrGbRhxaHbpkeT" />
-   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
-   <component name="ProjectViewState">
-@@ -51,22 +34,32 @@
-   </component>
-   <component name="PropertiesComponent"><![CDATA[{
-   "keyToString": {
-+    "Application.StudentGradeTrackerProject.executor": "Run",
-     "RunOnceActivity.OpenProjectViewOnStart": "true",
-     "RunOnceActivity.ShowReadmeOnStart": "true",
-     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
--    "WebServerToolWindowFactoryState": "false",
-     "git-widget-placeholder": "master",
--    "last_opened_file_path": "C:/Users/20109/IdeaProjects/Algorithm_Jfx",
-+    "ignore.virus.scanning.warn.message": "true",
-+    "kotlin-language-version-configured": "true",
-+    "last_opened_file_path": "C:/Users/User/Desktop/intellij projects/Algorithm_Jfx",
-     "node.js.detected.package.eslint": "true",
-     "node.js.detected.package.tslint": "true",
-     "node.js.selected.package.eslint": "(autodetect)",
-     "node.js.selected.package.tslint": "(autodetect)",
-+    "nodejs_package_manager_path": "npm",
-     "project.structure.last.edited": "Project",
--    "project.structure.proportion": "0.15",
-+    "project.structure.proportion": "0.0",
-     "project.structure.side.proportion": "0.0",
-     "vue.rearranger.settings.migration": "true"
-   }
- }]]></component>
-+  <component name="SharedIndexes">
-+    <attachedChunks>
-+      <set>
-+        <option value="jdk-20.0.2-corretto-20.0.2.1-3183f394aec4-907a2361" />
-+      </set>
-+    </attachedChunks>
-+  </component>
-   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-   <component name="TaskManager">
-     <task active="true" id="Default" summary="Default task">
-@@ -75,7 +68,8 @@
-       <option name="number" value="Default" />
-       <option name="presentableId" value="Default" />
-       <updated>1712517499532</updated>
--      <workItem from="1713485617503" duration="12141000" />
-+      <workItem from="1713697464315" duration="112000" />
-+      <workItem from="1713697596500" duration="2106000" />
-     </task>
-     <task id="LOCAL-00001" summary="first visualization">
-       <created>1713122013284</created>
-@@ -84,38 +78,11 @@
-       <option name="project" value="LOCAL" />
-       <updated>1713122013284</updated>
-     </task>
--    <task id="LOCAL-00002" summary="first visualization">
--      <option name="closed" value="true" />
--      <created>1713505137751</created>
--      <option name="number" value="00002" />
--      <option name="presentableId" value="LOCAL-00002" />
--      <option name="project" value="LOCAL" />
--      <updated>1713505137753</updated>
--    </task>
--    <task id="LOCAL-00003" summary="first visualization">
--      <option name="closed" value="true" />
--      <created>1713546117004</created>
--      <option name="number" value="00003" />
--      <option name="presentableId" value="LOCAL-00003" />
--      <option name="project" value="LOCAL" />
--      <updated>1713546117004</updated>
--    </task>
--    <option name="localTasksCounter" value="4" />
-+    <option name="localTasksCounter" value="2" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-     <option name="version" value="3" />
--  </component>
--  <component name="Vcs.Log.Tabs.Properties">
--    <option name="TAB_STATES">
--      <map>
--        <entry key="MAIN">
--          <value>
--            <State />
--          </value>
--        </entry>
--      </map>
--    </option>
-   </component>
-   <component name="VcsManagerConfiguration">
-     <MESSAGE value="first visualization" />
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_26_2024_10_30_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_26_2024_10_30_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_4_26_2024_10_30_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_4_26_2024_10_30_PM_[Changes]/shelved.patch	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ /dev/null	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
@@ -1,66 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"approximately final one\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;maryam22001&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"db847dad-5a20-4338-9d14-a04d79841591\" />\r\n        <option name=\"url\" value=\"https://github.com/anton-onsy/Algorithm_Jfx.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2emlBL7pLMOVOPrGbRhxaHbpkeT\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.AnimationTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.StudentGradeTrackerProject.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Test.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/20109/IdeaProjects/Algorithm_Jfx&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-20.0.2-corretto-20.0.2.1-3183f394aec4-907a2361\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"\" />\r\n      <created>1712517499532</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712517499532</updated>\r\n      <workItem from=\"1713485617503\" duration=\"12141000\" />\r\n      <workItem from=\"1713715731502\" duration=\"5367000\" />\r\n      <workItem from=\"1713902345387\" duration=\"4593000\" />\r\n      <workItem from=\"1713970126809\" duration=\"3654000\" />\r\n      <workItem from=\"1713973784996\" duration=\"741000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"first visualization\">\r\n      <created>1713122013284</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713122013284</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713505137751</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713505137753</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713546117004</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713546117004</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"approximately final one\">\r\n      <created>1714061464105</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714061464105</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first visualization\" />\r\n    <MESSAGE value=\"approximately final one\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"approximately final one\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.UnsupportedOperationException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 3c26a3f857ddf6c070246f6b7625425191885fd3)
-+++ b/.idea/workspace.xml	(date 1714066246894)
-@@ -4,7 +4,9 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="44467efd-aa85-4cd1-86d0-790f797d3aff" name="Changes" comment="approximately final one" />
-+    <list default="true" id="44467efd-aa85-4cd1-86d0-790f797d3aff" name="Changes" comment="first visualization">
-+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+    </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-@@ -35,7 +37,7 @@
-     </option>
-   </component>
-   <component name="ProblemsViewState">
--    <option name="selectedTabId" value="CurrentFile" />
-+    <option name="selectedTabId" value="ProjectErrors" />
-   </component>
-   <component name="ProjectColorInfo">{
-   &quot;associatedIndex&quot;: 1
-@@ -90,6 +92,8 @@
-       <workItem from="1713902345387" duration="4593000" />
-       <workItem from="1713970126809" duration="3654000" />
-       <workItem from="1713973784996" duration="741000" />
-+      <workItem from="1713988068311" duration="3225000" />
-+      <workItem from="1714066239617" duration="8000" />
-     </task>
-     <task id="LOCAL-00001" summary="first visualization">
-       <created>1713122013284</created>
-@@ -114,12 +118,13 @@
-       <option name="project" value="LOCAL" />
-       <updated>1713546117004</updated>
-     </task>
--    <task id="LOCAL-00004" summary="approximately final one">
--      <created>1714061464105</created>
-+    <task id="LOCAL-00004" summary="first visualization">
-+      <option name="closed" value="true" />
-+      <created>1713981987592</created>
-       <option name="number" value="00004" />
-       <option name="presentableId" value="LOCAL-00004" />
-       <option name="project" value="LOCAL" />
--      <updated>1714061464105</updated>
-+      <updated>1713981987592</updated>
-     </task>
-     <option name="localTasksCounter" value="5" />
-     <servers />
-@@ -140,8 +145,7 @@
-   </component>
-   <component name="VcsManagerConfiguration">
-     <MESSAGE value="first visualization" />
--    <MESSAGE value="approximately final one" />
--    <option name="LAST_COMMIT_MESSAGE" value="approximately final one" />
-+    <option name="LAST_COMMIT_MESSAGE" value="first visualization" />
-   </component>
-   <component name="XDebuggerManager">
-     <breakpoint-manager>
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ /dev/null	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM_[Changes]" date="1713700453027" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 4/21/2024 1:54 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_25_2024_6_16_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_25_2024_6_16_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_4_25_2024_6_16_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_4_25_2024_6_16_PM_[Changes]/shelved.patch	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ /dev/null	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
@@ -1,46 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"first visualization\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationTest.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;maryam22001&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"db847dad-5a20-4338-9d14-a04d79841591\" />\r\n        <option name=\"url\" value=\"https://github.com/anton-onsy/Algorithm_Jfx.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"ProjectErrors\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2emlBL7pLMOVOPrGbRhxaHbpkeT\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.AnimationTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.StudentGradeTrackerProject.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Test.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/20109/IdeaProjects/Algorithm_Jfx&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-20.0.2-corretto-20.0.2.1-3183f394aec4-907a2361\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"\" />\r\n      <created>1712517499532</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712517499532</updated>\r\n      <workItem from=\"1713485617503\" duration=\"12141000\" />\r\n      <workItem from=\"1713715731502\" duration=\"5367000\" />\r\n      <workItem from=\"1713902345387\" duration=\"4593000\" />\r\n      <workItem from=\"1713970126809\" duration=\"3654000\" />\r\n      <workItem from=\"1713973784996\" duration=\"741000\" />\r\n      <workItem from=\"1713988068311\" duration=\"3225000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"first visualization\">\r\n      <created>1713122013284</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713122013284</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713505137751</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713505137753</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713546117004</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713546117004</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713981987592</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713981987592</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first visualization\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"first visualization\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.UnsupportedOperationException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision d10bda33e301a3708c27c9429e7483d88a666905)
-+++ b/.idea/workspace.xml	(date 1713992429199)
-@@ -6,7 +6,6 @@
-   <component name="ChangeListManager">
-     <list default="true" id="44467efd-aa85-4cd1-86d0-790f797d3aff" name="Changes" comment="first visualization">
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationTest.java" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -93,7 +92,9 @@
-       <workItem from="1713902345387" duration="4593000" />
-       <workItem from="1713970126809" duration="3654000" />
-       <workItem from="1713973784996" duration="741000" />
--      <workItem from="1713988068311" duration="3225000" />
-+      <workItem from="1713988068311" duration="3641000" />
-+      <workItem from="1713991911798" duration="182000" />
-+      <workItem from="1713992412483" duration="17000" />
-     </task>
-     <task id="LOCAL-00001" summary="first visualization">
-       <created>1713122013284</created>
-@@ -126,7 +127,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1713981987592</updated>
-     </task>
--    <option name="localTasksCounter" value="5" />
-+    <task id="LOCAL-00005" summary="first visualization">
-+      <option name="closed" value="true" />
-+      <created>1713991474593</created>
-+      <option name="number" value="00005" />
-+      <option name="presentableId" value="LOCAL-00005" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1713991474593</updated>
-+    </task>
-+    <option name="localTasksCounter" value="6" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_8_03_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_8_03_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_8_03_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_8_03_PM_[Changes]/shelved.patch	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ /dev/null	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
@@ -1,381 +0,0 @@
-Index: src/main/java/com/example/algorithm_jfx/AnimationTest.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.algorithm_jfx;\r\n\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.Timeline;\r\nimport javafx.application.Application;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.StackPane;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\npublic class AnimationTest extends Application {\r\n\r\n    private static final int ARRAY_SIZE = 5;\r\n    private static final int RECTANGLE_WIDTH = 100;\r\n    private static final int MAX_GRADE = 100;\r\n\r\n    private Student[] students;\r\n    private HBox hbox;\r\n    private int step;\r\n    private int sortedElemNum;\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) {\r\n        students = new Student[ARRAY_SIZE];\r\n        for (int i = 0; i < ARRAY_SIZE; i++) {\r\n            students[i] = new Student(\"Student\" + (i + 1), (int) (Math.random() * MAX_GRADE));\r\n        }\r\n\r\n        hbox = new HBox();\r\n        hbox.setAlignment(Pos.CENTER);\r\n        hbox.setStyle(\"-fx-border-color: black;\");\r\n        drawStudents();\r\n\r\n        Scene scene = new Scene(hbox, ARRAY_SIZE * RECTANGLE_WIDTH, 150);\r\n        primaryStage.setScene(scene);\r\n        primaryStage.setTitle(\"Sorting Visualization\");\r\n        primaryStage.show();\r\n\r\n        // Visualize Selection Sort\r\n        Timeline timeline = new Timeline(\r\n                new KeyFrame(Duration.seconds(1), e -> {\r\n                    if (step < ARRAY_SIZE) {\r\n                        selectionSortStep();\r\n                        drawStudents();\r\n                        step++;\r\n                    }\r\n                })\r\n        );\r\n        timeline.setCycleCount(ARRAY_SIZE);\r\n        timeline.play();\r\n    }\r\n\r\n    private void drawStudents() {\r\n        hbox.getChildren().clear();\r\n        for (int i = 0; i < ARRAY_SIZE; i++) {\r\n            Student student = students[i];\r\n            Rectangle rectangle = new Rectangle(RECTANGLE_WIDTH, 50 * student.getGrade() / MAX_GRADE, Color.GRAY);\r\n            rectangle.setStroke(Color.WHITE);\r\n            rectangle.setStrokeWidth(2);\r\n            Text text = new Text(student.getName() + \" (\" + student.getGrade() + \")\");\r\n            text.setFill(Color.BLACK);\r\n            StackPane stackPane = new StackPane(rectangle, text);\r\n            stackPane.setAlignment(Pos.BOTTOM_CENTER);\r\n            hbox.getChildren().add(stackPane);\r\n        }\r\n    }\r\n\r\n    private void selectionSortStep() {\r\n        int minIndex = step;\r\n        for (int i = step + 1; i < ARRAY_SIZE; i++) {\r\n            if (students[i].getGrade() < students[minIndex].getGrade()) {\r\n                minIndex = i;\r\n            }\r\n        }\r\n        // Swap\r\n        Student temp = students[minIndex];\r\n        students[minIndex] = students[step];\r\n        students[step] = temp;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/com/example/algorithm_jfx/AnimationTest.java b/src/main/java/com/example/algorithm_jfx/AnimationTest.java
---- a/src/main/java/com/example/algorithm_jfx/AnimationTest.java	(revision 0f78af4c39e99e71e1084dddcdfa35b8f2edd74b)
-+++ b/src/main/java/com/example/algorithm_jfx/AnimationTest.java	(date 1713981610573)
-@@ -3,8 +3,11 @@
- import javafx.animation.KeyFrame;
- import javafx.animation.Timeline;
- import javafx.application.Application;
-+import javafx.geometry.Insets;
- import javafx.geometry.Pos;
- import javafx.scene.Scene;
-+import javafx.scene.control.Button;
-+import javafx.scene.layout.BorderPane;
- import javafx.scene.layout.HBox;
- import javafx.scene.layout.StackPane;
- import javafx.scene.paint.Color;
-@@ -15,14 +18,14 @@
- 
- public class AnimationTest extends Application {
- 
--    private static final int ARRAY_SIZE = 5;
--    private static final int RECTANGLE_WIDTH = 100;
-+    private static final int ARRAY_SIZE = 10;
-+    private static final int RECTANGLE_WIDTH = 75;
-     private static final int MAX_GRADE = 100;
- 
-     private Student[] students;
-     private HBox hbox;
-     private int step;
--    private int sortedElemNum;
-+    private boolean sortingActive;
- 
-     public static void main(String[] args) {
-         launch(args);
-@@ -37,35 +40,107 @@
- 
-         hbox = new HBox();
-         hbox.setAlignment(Pos.CENTER);
--        hbox.setStyle("-fx-border-color: black;");
--        drawStudents();
-+        hbox.setSpacing(10);
-+        hbox.setPadding(new Insets(10));
-+
-+        BorderPane root = new BorderPane();
-+        root.setCenter(hbox);
-+
-+        Button selectionSortButton = new Button("Selection Sort");
-+        Button selectionSortOneStepButton = new Button("Selection Sort One Step");
-+        Button bubbleSortButton = new Button("Bubble Sort");
-+        Button shuffleButton = new Button("Shuffle");
-+
-+        HBox bottomBox = new HBox(10, selectionSortButton, selectionSortOneStepButton, bubbleSortButton, shuffleButton);
-+        bottomBox.setAlignment(Pos.CENTER);
-+        bottomBox.setPadding(new Insets(10));
- 
--        Scene scene = new Scene(hbox, ARRAY_SIZE * RECTANGLE_WIDTH, 150);
-+        root.setBottom(bottomBox);
-+
-+        Scene scene = new Scene(root, 900, 400); // Initial size set to 800x400
-         primaryStage.setScene(scene);
-         primaryStage.setTitle("Sorting Visualization");
-         primaryStage.show();
- 
--        // Visualize Selection Sort
--        Timeline timeline = new Timeline(
--                new KeyFrame(Duration.seconds(1), e -> {
--                    if (step < ARRAY_SIZE) {
--                        selectionSortStep();
--                        drawStudents();
--                        step++;
--                    }
--                })
--        );
--        timeline.setCycleCount(ARRAY_SIZE);
--        timeline.play();
-+        selectionSortButton.setOnAction(e -> {
-+            sortingActive = true;
-+            startSorting("Selection Sort");
-+        });
-+
-+        selectionSortOneStepButton.setOnAction(e -> {
-+            selectionSortStepVisualization();
-+        });
-+
-+        bubbleSortButton.setOnAction(e -> {
-+            sortingActive = true;
-+            startSorting("Bubble Sort");
-+        });
-+
-+        shuffleButton.setOnAction(e -> {
-+            sortingActive = false;
-+            shuffleStudents();
-+            drawStudents();
-+        });
-+
-+        drawStudents();
-     }
- 
-     private void drawStudents() {
-         hbox.getChildren().clear();
-         for (int i = 0; i < ARRAY_SIZE; i++) {
-             Student student = students[i];
--            Rectangle rectangle = new Rectangle(RECTANGLE_WIDTH, 50 * student.getGrade() / MAX_GRADE, Color.GRAY);
--            rectangle.setStroke(Color.WHITE);
--            rectangle.setStrokeWidth(2);
-+            Rectangle rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.LIGHTGREY);
-+            Text text = new Text(student.getName() + " (" + student.getGrade() + ")");
-+            text.setFill(Color.BLACK);
-+            StackPane stackPane = new StackPane(rectangle, text);
-+            stackPane.setAlignment(Pos.BOTTOM_CENTER);
-+            hbox.getChildren().add(stackPane);
-+        }
-+    }
-+
-+    private void drawStudentsComparing() {}
-+
-+    private void drawStudentsComparingJustBeforeSwapping(int firstInd, int secondInd) {
-+        hbox.getChildren().clear();
-+        for (int i = 0; i < ARRAY_SIZE; i++) {
-+            Student student = students[i];
-+
-+            Rectangle rectangle;
-+            //Coloring
-+            if(i!=firstInd & i != secondInd){
-+                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.LIGHTGREY);
-+            } else if (i == firstInd) {
-+                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.RED);
-+            }else {
-+                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.BLUE);
-+            }
-+
-+
-+
-+            Text text = new Text(student.getName() + " (" + student.getGrade() + ")");
-+            text.setFill(Color.BLACK);
-+            StackPane stackPane = new StackPane(rectangle, text);
-+            stackPane.setAlignment(Pos.BOTTOM_CENTER);
-+            hbox.getChildren().add(stackPane);
-+        }
-+    }
-+
-+
-+    private void drawStudentsJustAfterSwapping(int firstInd, int secondInd) {
-+        hbox.getChildren().clear();
-+        for (int i = 0; i < ARRAY_SIZE; i++) {
-+            Student student = students[i];
-+
-+            Rectangle rectangle;
-+            //Coloring
-+            if(i!=firstInd & i != secondInd){
-+                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.LIGHTGREY);
-+            } else {
-+                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.GREEN);
-+            }
-+
-+
-+
-             Text text = new Text(student.getName() + " (" + student.getGrade() + ")");
-             text.setFill(Color.BLACK);
-             StackPane stackPane = new StackPane(rectangle, text);
-@@ -74,6 +149,36 @@
-         }
-     }
- 
-+
-+    private void startSorting(String sortingType) {
-+        Timeline timeline = new Timeline(
-+                new KeyFrame(Duration.seconds(1), e -> {
-+                    if (sortingActive && step < ARRAY_SIZE) {
-+                        if (sortingType.equals("Selection Sort")) {
-+                            selectionSortStep();
-+                        } else if (sortingType.equals("Bubble Sort")) {
-+                            bubbleSortStep();
-+                        }
-+                        drawStudents();
-+                        step++;
-+                    }
-+                })
-+        );
-+        timeline.setCycleCount(ARRAY_SIZE);
-+        timeline.play();
-+    }
-+
-+    private void shuffleStudents() {
-+        // Shuffle students array
-+        for (int i = 0; i < ARRAY_SIZE; i++) {
-+            int randomIndex = (int) (Math.random() * ARRAY_SIZE);
-+            Student temp = students[i];
-+            students[i] = students[randomIndex];
-+            students[randomIndex] = temp;
-+        }
-+        step = 0;
-+    }
-+
-     private void selectionSortStep() {
-         int minIndex = step;
-         for (int i = step + 1; i < ARRAY_SIZE; i++) {
-@@ -86,4 +191,53 @@
-         students[minIndex] = students[step];
-         students[step] = temp;
-     }
-+
-+    private void selectionSortStepVisualization() {
-+
-+        KeyFrame Swap = new KeyFrame(Duration.seconds(2), e -> {
-+            int minIndex = step;
-+            for (int i = step + 1; i < ARRAY_SIZE; i++) {
-+                if (students[i].getGrade() < students[minIndex].getGrade()) {
-+                    minIndex = i;
-+                }
-+            }
-+            drawStudentsComparingJustBeforeSwapping(0,minIndex);
-+            // Swap
-+            Student temp = students[minIndex];
-+            students[minIndex] = students[step];
-+            students[step] = temp;
-+            //drawStudentsJustAfterSwapping(0, minIndex);
-+        });
-+
-+        Timeline timeline = new Timeline(Swap);
-+        timeline.play();
-+
-+
-+//        int minIndex = step;
-+//        for (int i = step + 1; i < ARRAY_SIZE; i++) {
-+//            if (students[i].getGrade() < students[minIndex].getGrade()) {
-+//                minIndex = i;
-+//            }
-+//        }
-+//        drawStudentsComparingJustBeforeSwapping(0,minIndex);
-+//
-+//        // Swap
-+//        Student temp = students[minIndex];
-+//        students[minIndex] = students[step];
-+//        students[step] = temp;
-+//
-+//        drawStudentsJustAfterSwapping(0, minIndex);
-+    }
-+    private void bubbleSortStep() {
-+        if (step < ARRAY_SIZE - 1) {
-+            for (int j = 0; j < ARRAY_SIZE - step - 1; j++) {
-+                if (students[j].getGrade() > students[j + 1].getGrade()) {
-+                    // Swap
-+                    Student temp = students[j];
-+                    students[j] = students[j + 1];
-+                    students[j + 1] = temp;
-+                }
-+            }
-+        }
-+    }
- }
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"first visualization\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_4_18_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_4_18_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_8_01_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_8_01_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_03_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_03_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;maryam22001&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"db847dad-5a20-4338-9d14-a04d79841591\" />\r\n        <option name=\"url\" value=\"https://github.com/anton-onsy/Algorithm_Jfx.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"ProjectErrors\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2emlBL7pLMOVOPrGbRhxaHbpkeT\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.AnimationTest.executor\": \"Run\",\r\n    \"Application.StudentGradeTrackerProject.executor\": \"Run\",\r\n    \"Application.Test.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/20109/IdeaProjects/Algorithm_Jfx\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-20.0.2-corretto-20.0.2.1-3183f394aec4-907a2361\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"\" />\r\n      <created>1712517499532</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712517499532</updated>\r\n      <workItem from=\"1713485617503\" duration=\"12141000\" />\r\n      <workItem from=\"1713715731502\" duration=\"5367000\" />\r\n      <workItem from=\"1713902345387\" duration=\"4593000\" />\r\n      <workItem from=\"1713970126809\" duration=\"3654000\" />\r\n      <workItem from=\"1713973784996\" duration=\"741000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"first visualization\">\r\n      <created>1713122013284</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713122013284</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713505137751</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713505137753</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713546117004</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713546117004</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first visualization\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"first visualization\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.UnsupportedOperationException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 0f78af4c39e99e71e1084dddcdfa35b8f2edd74b)
-+++ b/.idea/workspace.xml	(date 1713981611117)
-@@ -5,14 +5,9 @@
-   </component>
-   <component name="ChangeListManager">
-     <list default="true" id="44467efd-aa85-4cd1-86d0-790f797d3aff" name="Changes" comment="first visualization">
--      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_4_18_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_4_18_PM__Changes_.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_8_01_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_8_01_PM__Changes_.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_03_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_03_PM__Changes_.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/KeyFrameExample.java" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationTest.java" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -38,7 +33,7 @@
-   <component name="GithubPullRequestsUISettings">
-     <option name="selectedUrlAndAccountId">
-       <UrlAndAccount>
--        <option name="accountId" value="db847dad-5a20-4338-9d14-a04d79841591" />
-+        <option name="accountId" value="fa70ea20-65a9-4913-a5a7-faab234a707a" />
-         <option name="url" value="https://github.com/anton-onsy/Algorithm_Jfx.git" />
-       </UrlAndAccount>
-     </option>
-@@ -58,6 +53,7 @@
-   <component name="PropertiesComponent"><![CDATA[{
-   "keyToString": {
-     "Application.AnimationTest.executor": "Run",
-+    "Application.KeyFrameExample.executor": "Run",
-     "Application.StudentGradeTrackerProject.executor": "Run",
-     "Application.Test.executor": "Run",
-     "RunOnceActivity.OpenProjectViewOnStart": "true",
-@@ -98,7 +94,7 @@
-       <workItem from="1713715731502" duration="5367000" />
-       <workItem from="1713902345387" duration="4593000" />
-       <workItem from="1713970126809" duration="3654000" />
--      <workItem from="1713973784996" duration="741000" />
-+      <workItem from="1713973784996" duration="7816000" />
-     </task>
-     <task id="LOCAL-00001" summary="first visualization">
-       <created>1713122013284</created>
-@@ -123,7 +119,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1713546117004</updated>
-     </task>
--    <option name="localTasksCounter" value="4" />
-+    <task id="LOCAL-00004" summary="first visualization">
-+      <option name="closed" value="true" />
-+      <created>1713974635669</created>
-+      <option name="number" value="00004" />
-+      <option name="presentableId" value="LOCAL-00004" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1713974635669</updated>
-+    </task>
-+    <option name="localTasksCounter" value="5" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-Index: src/main/java/com/example/algorithm_jfx/KeyFrameExample.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/com/example/algorithm_jfx/KeyFrameExample.java b/src/main/java/com/example/algorithm_jfx/KeyFrameExample.java
-new file mode 100644
---- /dev/null	(date 1713980847947)
-+++ b/src/main/java/com/example/algorithm_jfx/KeyFrameExample.java	(date 1713980847947)
-@@ -0,0 +1,43 @@
-+package com.example.algorithm_jfx;
-+
-+import javafx.animation.KeyFrame;
-+import javafx.animation.Timeline;
-+import javafx.application.Application;
-+import javafx.scene.Scene;
-+import javafx.scene.layout.StackPane;
-+import javafx.scene.shape.Rectangle;
-+import javafx.stage.Stage;
-+import javafx.util.Duration;
-+
-+public class KeyFrameExample extends Application {
-+
-+    @Override
-+    public void start(Stage primaryStage) {
-+        Rectangle rect = new Rectangle(50, 50);
-+        StackPane root = new StackPane(rect);
-+        Scene scene = new Scene(root, 200, 200);
-+        primaryStage.setScene(scene);
-+        primaryStage.show();
-+
-+        // Define KeyFrames for moving the rectangle
-+        KeyFrame moveRight = new KeyFrame(Duration.seconds(1), e -> {
-+            rect.setTranslateX(rect.getTranslateX() + 50); // Move right
-+        });
-+
-+        KeyFrame moveUp = new KeyFrame(Duration.seconds(2), e -> {
-+            rect.setTranslateY(rect.getTranslateY() - 50); // Move up
-+        });
-+
-+        KeyFrame moveLeft = new KeyFrame(Duration.seconds(3), e -> {
-+            rect.setTranslateX(rect.getTranslateX() - 50); // Move left
-+        });
-+
-+        // Create a Timeline with the defined KeyFrames
-+        Timeline timeline = new Timeline(moveRight, moveUp, moveLeft);
-+        timeline.play();
-+    }
-+
-+    public static void main(String[] args) {
-+        launch(args);
-+    }
-+}
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_6_08_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_6_08_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_6_08_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_6_08_PM__Changes_.xml	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ /dev/null	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_4_24_2024_6_08_PM_[Changes]" date="1713974905621" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_6_08_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 4/24/2024 6:08 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_25_2024_6_16_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_25_2024_6_16_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_4_25_2024_6_16_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_4_25_2024_6_16_PM__Changes_.xml	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ /dev/null	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_4_25_2024_6_16_PM_[Changes]" date="1714061813666" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_25_2024_6_16_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 4/25/2024 6:16 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"first visualization\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationTest.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;maryam22001&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"fa70ea20-65a9-4913-a5a7-faab234a707a\" />\r\n        <option name=\"url\" value=\"https://github.com/anton-onsy/Algorithm_Jfx.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"ProjectErrors\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2emlBL7pLMOVOPrGbRhxaHbpkeT\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.AnimationTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.StudentGradeTrackerProject.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Test.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/20109/IdeaProjects/Algorithm_Jfx&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-20.0.2-corretto-20.0.2.1-3183f394aec4-907a2361\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"\" />\r\n      <created>1712517499532</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712517499532</updated>\r\n      <workItem from=\"1713485617503\" duration=\"12141000\" />\r\n      <workItem from=\"1713715731502\" duration=\"5367000\" />\r\n      <workItem from=\"1713902345387\" duration=\"4593000\" />\r\n      <workItem from=\"1713970126809\" duration=\"3654000\" />\r\n      <workItem from=\"1713973784996\" duration=\"741000\" />\r\n      <workItem from=\"1713988068311\" duration=\"3225000\" />\r\n      <workItem from=\"1714066239617\" duration=\"8000\" />\r\n      <workItem from=\"1714159797732\" duration=\"55000\" />\r\n      <workItem from=\"1714293309271\" duration=\"7437000\" />\r\n      <workItem from=\"1714301056825\" duration=\"1577000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"first visualization\">\r\n      <created>1713122013284</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713122013284</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713505137751</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713505137753</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713546117004</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713546117004</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713981987592</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713981987592</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714300628577</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714300628577</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714302165015</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714302165015</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first visualization\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"first visualization\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.UnsupportedOperationException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8bd18044d33e692a068e894cae599349cccbd92b)
+++ b/.idea/workspace.xml	(date 1715196448570)
@@ -5,8 +5,21 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="44467efd-aa85-4cd1-86d0-790f797d3aff" name="Changes" comment="first visualization">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_6_08_PM_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_6_08_PM__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_8_03_PM_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_24_2024_8_03_PM__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_25_2024_6_16_PM_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_25_2024_6_16_PM__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_26_2024_10_30_PM_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_26_2024_10_30_PM__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/StudentGradeTrackerProject.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -21,6 +34,11 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="master" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="GitHubPullRequestSearchHistory">{
@@ -49,30 +67,30 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Application.AnimationTest.executor&quot;: &quot;Run&quot;,
-    &quot;Application.StudentGradeTrackerProject.executor&quot;: &quot;Run&quot;,
-    &quot;Application.Test.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/20109/IdeaProjects/Algorithm_Jfx&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.AnimationTest.executor": "Run",
+    "Application.StudentGradeTrackerProject.executor": "Run",
+    "Application.Test.executor": "Run",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "Peter-Quicksort",
+    "ignore.virus.scanning.warn.message": "true",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "C:/Users/20109/IdeaProjects/Algorithm_Jfx",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Project",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.0",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
@@ -97,7 +115,13 @@
       <workItem from="1714066239617" duration="8000" />
       <workItem from="1714159797732" duration="55000" />
       <workItem from="1714293309271" duration="7437000" />
-      <workItem from="1714301056825" duration="1577000" />
+      <workItem from="1714301056825" duration="1887000" />
+      <workItem from="1714384800317" duration="2901000" />
+      <workItem from="1714388034003" duration="191000" />
+      <workItem from="1714389766629" duration="1159000" />
+      <workItem from="1714390973723" duration="124000" />
+      <workItem from="1715190035793" duration="711000" />
+      <workItem from="1715190748092" duration="5695000" />
     </task>
     <task id="LOCAL-00001" summary="first visualization">
       <created>1713122013284</created>
@@ -146,7 +170,15 @@
       <option name="project" value="LOCAL" />
       <updated>1714302165015</updated>
     </task>
-    <option name="localTasksCounter" value="7" />
+    <task id="LOCAL-00007" summary="first visualization">
+      <option name="closed" value="true" />
+      <created>1714302849857</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1714302849857</updated>
+    </task>
+    <option name="localTasksCounter" value="8" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
