Index: src/main/java/com/example/algorithm_jfx/AnimationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.algorithm_jfx;\r\n\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.Timeline;\r\nimport javafx.application.Application;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.StackPane;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\npublic class AnimationTest extends Application {\r\n\r\n    private static final int ARRAY_SIZE = 5;\r\n    private static final int RECTANGLE_WIDTH = 100;\r\n    private static final int MAX_GRADE = 100;\r\n\r\n    private Student[] students;\r\n    private HBox hbox;\r\n    private int step;\r\n    private int sortedElemNum;\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) {\r\n        students = new Student[ARRAY_SIZE];\r\n        for (int i = 0; i < ARRAY_SIZE; i++) {\r\n            students[i] = new Student(\"Student\" + (i + 1), (int) (Math.random() * MAX_GRADE));\r\n        }\r\n\r\n        hbox = new HBox();\r\n        hbox.setAlignment(Pos.CENTER);\r\n        hbox.setStyle(\"-fx-border-color: black;\");\r\n        drawStudents();\r\n\r\n        Scene scene = new Scene(hbox, ARRAY_SIZE * RECTANGLE_WIDTH, 150);\r\n        primaryStage.setScene(scene);\r\n        primaryStage.setTitle(\"Sorting Visualization\");\r\n        primaryStage.show();\r\n\r\n        // Visualize Selection Sort\r\n        Timeline timeline = new Timeline(\r\n                new KeyFrame(Duration.seconds(1), e -> {\r\n                    if (step < ARRAY_SIZE) {\r\n                        selectionSortStep();\r\n                        drawStudents();\r\n                        step++;\r\n                    }\r\n                })\r\n        );\r\n        timeline.setCycleCount(ARRAY_SIZE);\r\n        timeline.play();\r\n    }\r\n\r\n    private void drawStudents() {\r\n        hbox.getChildren().clear();\r\n        for (int i = 0; i < ARRAY_SIZE; i++) {\r\n            Student student = students[i];\r\n            Rectangle rectangle = new Rectangle(RECTANGLE_WIDTH, 50 * student.getGrade() / MAX_GRADE, Color.GRAY);\r\n            rectangle.setStroke(Color.WHITE);\r\n            rectangle.setStrokeWidth(2);\r\n            Text text = new Text(student.getName() + \" (\" + student.getGrade() + \")\");\r\n            text.setFill(Color.BLACK);\r\n            StackPane stackPane = new StackPane(rectangle, text);\r\n            stackPane.setAlignment(Pos.BOTTOM_CENTER);\r\n            hbox.getChildren().add(stackPane);\r\n        }\r\n    }\r\n\r\n    private void selectionSortStep() {\r\n        int minIndex = step;\r\n        for (int i = step + 1; i < ARRAY_SIZE; i++) {\r\n            if (students[i].getGrade() < students[minIndex].getGrade()) {\r\n                minIndex = i;\r\n            }\r\n        }\r\n        // Swap\r\n        Student temp = students[minIndex];\r\n        students[minIndex] = students[step];\r\n        students[step] = temp;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/algorithm_jfx/AnimationTest.java b/src/main/java/com/example/algorithm_jfx/AnimationTest.java
--- a/src/main/java/com/example/algorithm_jfx/AnimationTest.java	(revision 0f78af4c39e99e71e1084dddcdfa35b8f2edd74b)
+++ b/src/main/java/com/example/algorithm_jfx/AnimationTest.java	(date 1713981610573)
@@ -3,8 +3,11 @@
 import javafx.animation.KeyFrame;
 import javafx.animation.Timeline;
 import javafx.application.Application;
+import javafx.geometry.Insets;
 import javafx.geometry.Pos;
 import javafx.scene.Scene;
+import javafx.scene.control.Button;
+import javafx.scene.layout.BorderPane;
 import javafx.scene.layout.HBox;
 import javafx.scene.layout.StackPane;
 import javafx.scene.paint.Color;
@@ -15,14 +18,14 @@
 
 public class AnimationTest extends Application {
 
-    private static final int ARRAY_SIZE = 5;
-    private static final int RECTANGLE_WIDTH = 100;
+    private static final int ARRAY_SIZE = 10;
+    private static final int RECTANGLE_WIDTH = 75;
     private static final int MAX_GRADE = 100;
 
     private Student[] students;
     private HBox hbox;
     private int step;
-    private int sortedElemNum;
+    private boolean sortingActive;
 
     public static void main(String[] args) {
         launch(args);
@@ -37,35 +40,107 @@
 
         hbox = new HBox();
         hbox.setAlignment(Pos.CENTER);
-        hbox.setStyle("-fx-border-color: black;");
-        drawStudents();
+        hbox.setSpacing(10);
+        hbox.setPadding(new Insets(10));
+
+        BorderPane root = new BorderPane();
+        root.setCenter(hbox);
+
+        Button selectionSortButton = new Button("Selection Sort");
+        Button selectionSortOneStepButton = new Button("Selection Sort One Step");
+        Button bubbleSortButton = new Button("Bubble Sort");
+        Button shuffleButton = new Button("Shuffle");
+
+        HBox bottomBox = new HBox(10, selectionSortButton, selectionSortOneStepButton, bubbleSortButton, shuffleButton);
+        bottomBox.setAlignment(Pos.CENTER);
+        bottomBox.setPadding(new Insets(10));
 
-        Scene scene = new Scene(hbox, ARRAY_SIZE * RECTANGLE_WIDTH, 150);
+        root.setBottom(bottomBox);
+
+        Scene scene = new Scene(root, 900, 400); // Initial size set to 800x400
         primaryStage.setScene(scene);
         primaryStage.setTitle("Sorting Visualization");
         primaryStage.show();
 
-        // Visualize Selection Sort
-        Timeline timeline = new Timeline(
-                new KeyFrame(Duration.seconds(1), e -> {
-                    if (step < ARRAY_SIZE) {
-                        selectionSortStep();
-                        drawStudents();
-                        step++;
-                    }
-                })
-        );
-        timeline.setCycleCount(ARRAY_SIZE);
-        timeline.play();
+        selectionSortButton.setOnAction(e -> {
+            sortingActive = true;
+            startSorting("Selection Sort");
+        });
+
+        selectionSortOneStepButton.setOnAction(e -> {
+            selectionSortStepVisualization();
+        });
+
+        bubbleSortButton.setOnAction(e -> {
+            sortingActive = true;
+            startSorting("Bubble Sort");
+        });
+
+        shuffleButton.setOnAction(e -> {
+            sortingActive = false;
+            shuffleStudents();
+            drawStudents();
+        });
+
+        drawStudents();
     }
 
     private void drawStudents() {
         hbox.getChildren().clear();
         for (int i = 0; i < ARRAY_SIZE; i++) {
             Student student = students[i];
-            Rectangle rectangle = new Rectangle(RECTANGLE_WIDTH, 50 * student.getGrade() / MAX_GRADE, Color.GRAY);
-            rectangle.setStroke(Color.WHITE);
-            rectangle.setStrokeWidth(2);
+            Rectangle rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.LIGHTGREY);
+            Text text = new Text(student.getName() + " (" + student.getGrade() + ")");
+            text.setFill(Color.BLACK);
+            StackPane stackPane = new StackPane(rectangle, text);
+            stackPane.setAlignment(Pos.BOTTOM_CENTER);
+            hbox.getChildren().add(stackPane);
+        }
+    }
+
+    private void drawStudentsComparing() {}
+
+    private void drawStudentsComparingJustBeforeSwapping(int firstInd, int secondInd) {
+        hbox.getChildren().clear();
+        for (int i = 0; i < ARRAY_SIZE; i++) {
+            Student student = students[i];
+
+            Rectangle rectangle;
+            //Coloring
+            if(i!=firstInd & i != secondInd){
+                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.LIGHTGREY);
+            } else if (i == firstInd) {
+                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.RED);
+            }else {
+                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.BLUE);
+            }
+
+
+
+            Text text = new Text(student.getName() + " (" + student.getGrade() + ")");
+            text.setFill(Color.BLACK);
+            StackPane stackPane = new StackPane(rectangle, text);
+            stackPane.setAlignment(Pos.BOTTOM_CENTER);
+            hbox.getChildren().add(stackPane);
+        }
+    }
+
+
+    private void drawStudentsJustAfterSwapping(int firstInd, int secondInd) {
+        hbox.getChildren().clear();
+        for (int i = 0; i < ARRAY_SIZE; i++) {
+            Student student = students[i];
+
+            Rectangle rectangle;
+            //Coloring
+            if(i!=firstInd & i != secondInd){
+                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.LIGHTGREY);
+            } else {
+                rectangle = new Rectangle(RECTANGLE_WIDTH, 200 * student.getGrade() / MAX_GRADE, Color.GREEN);
+            }
+
+
+
             Text text = new Text(student.getName() + " (" + student.getGrade() + ")");
             text.setFill(Color.BLACK);
             StackPane stackPane = new StackPane(rectangle, text);
@@ -74,6 +149,36 @@
         }
     }
 
+
+    private void startSorting(String sortingType) {
+        Timeline timeline = new Timeline(
+                new KeyFrame(Duration.seconds(1), e -> {
+                    if (sortingActive && step < ARRAY_SIZE) {
+                        if (sortingType.equals("Selection Sort")) {
+                            selectionSortStep();
+                        } else if (sortingType.equals("Bubble Sort")) {
+                            bubbleSortStep();
+                        }
+                        drawStudents();
+                        step++;
+                    }
+                })
+        );
+        timeline.setCycleCount(ARRAY_SIZE);
+        timeline.play();
+    }
+
+    private void shuffleStudents() {
+        // Shuffle students array
+        for (int i = 0; i < ARRAY_SIZE; i++) {
+            int randomIndex = (int) (Math.random() * ARRAY_SIZE);
+            Student temp = students[i];
+            students[i] = students[randomIndex];
+            students[randomIndex] = temp;
+        }
+        step = 0;
+    }
+
     private void selectionSortStep() {
         int minIndex = step;
         for (int i = step + 1; i < ARRAY_SIZE; i++) {
@@ -86,4 +191,53 @@
         students[minIndex] = students[step];
         students[step] = temp;
     }
+
+    private void selectionSortStepVisualization() {
+
+        KeyFrame Swap = new KeyFrame(Duration.seconds(2), e -> {
+            int minIndex = step;
+            for (int i = step + 1; i < ARRAY_SIZE; i++) {
+                if (students[i].getGrade() < students[minIndex].getGrade()) {
+                    minIndex = i;
+                }
+            }
+            drawStudentsComparingJustBeforeSwapping(0,minIndex);
+            // Swap
+            Student temp = students[minIndex];
+            students[minIndex] = students[step];
+            students[step] = temp;
+            //drawStudentsJustAfterSwapping(0, minIndex);
+        });
+
+        Timeline timeline = new Timeline(Swap);
+        timeline.play();
+
+
+//        int minIndex = step;
+//        for (int i = step + 1; i < ARRAY_SIZE; i++) {
+//            if (students[i].getGrade() < students[minIndex].getGrade()) {
+//                minIndex = i;
+//            }
+//        }
+//        drawStudentsComparingJustBeforeSwapping(0,minIndex);
+//
+//        // Swap
+//        Student temp = students[minIndex];
+//        students[minIndex] = students[step];
+//        students[step] = temp;
+//
+//        drawStudentsJustAfterSwapping(0, minIndex);
+    }
+    private void bubbleSortStep() {
+        if (step < ARRAY_SIZE - 1) {
+            for (int j = 0; j < ARRAY_SIZE - step - 1; j++) {
+                if (students[j].getGrade() > students[j + 1].getGrade()) {
+                    // Swap
+                    Student temp = students[j];
+                    students[j] = students[j + 1];
+                    students[j + 1] = temp;
+                }
+            }
+        }
+    }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"first visualization\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_4_18_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_4_18_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_8_01_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_8_01_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_03_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_03_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;maryam22001&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"db847dad-5a20-4338-9d14-a04d79841591\" />\r\n        <option name=\"url\" value=\"https://github.com/anton-onsy/Algorithm_Jfx.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"ProjectErrors\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2emlBL7pLMOVOPrGbRhxaHbpkeT\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.AnimationTest.executor\": \"Run\",\r\n    \"Application.StudentGradeTrackerProject.executor\": \"Run\",\r\n    \"Application.Test.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/20109/IdeaProjects/Algorithm_Jfx\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-20.0.2-corretto-20.0.2.1-3183f394aec4-907a2361\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"44467efd-aa85-4cd1-86d0-790f797d3aff\" name=\"Changes\" comment=\"\" />\r\n      <created>1712517499532</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712517499532</updated>\r\n      <workItem from=\"1713485617503\" duration=\"12141000\" />\r\n      <workItem from=\"1713715731502\" duration=\"5367000\" />\r\n      <workItem from=\"1713902345387\" duration=\"4593000\" />\r\n      <workItem from=\"1713970126809\" duration=\"3654000\" />\r\n      <workItem from=\"1713973784996\" duration=\"741000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"first visualization\">\r\n      <created>1713122013284</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713122013284</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713505137751</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713505137753</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"first visualization\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713546117004</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713546117004</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first visualization\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"first visualization\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.UnsupportedOperationException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0f78af4c39e99e71e1084dddcdfa35b8f2edd74b)
+++ b/.idea/workspace.xml	(date 1713981611117)
@@ -5,14 +5,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="44467efd-aa85-4cd1-86d0-790f797d3aff" name="Changes" comment="first visualization">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_15_2024_7_56_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_4_18_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_4_18_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_8_01_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_20_2024_8_01_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_03_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_03_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_21_2024_1_54_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_22_2024_7_08_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/KeyFrameExample.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/algorithm_jfx/AnimationTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -38,7 +33,7 @@
   <component name="GithubPullRequestsUISettings">
     <option name="selectedUrlAndAccountId">
       <UrlAndAccount>
-        <option name="accountId" value="db847dad-5a20-4338-9d14-a04d79841591" />
+        <option name="accountId" value="fa70ea20-65a9-4913-a5a7-faab234a707a" />
         <option name="url" value="https://github.com/anton-onsy/Algorithm_Jfx.git" />
       </UrlAndAccount>
     </option>
@@ -58,6 +53,7 @@
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
     "Application.AnimationTest.executor": "Run",
+    "Application.KeyFrameExample.executor": "Run",
     "Application.StudentGradeTrackerProject.executor": "Run",
     "Application.Test.executor": "Run",
     "RunOnceActivity.OpenProjectViewOnStart": "true",
@@ -98,7 +94,7 @@
       <workItem from="1713715731502" duration="5367000" />
       <workItem from="1713902345387" duration="4593000" />
       <workItem from="1713970126809" duration="3654000" />
-      <workItem from="1713973784996" duration="741000" />
+      <workItem from="1713973784996" duration="7816000" />
     </task>
     <task id="LOCAL-00001" summary="first visualization">
       <created>1713122013284</created>
@@ -123,7 +119,15 @@
       <option name="project" value="LOCAL" />
       <updated>1713546117004</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="first visualization">
+      <option name="closed" value="true" />
+      <created>1713974635669</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1713974635669</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: src/main/java/com/example/algorithm_jfx/KeyFrameExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/algorithm_jfx/KeyFrameExample.java b/src/main/java/com/example/algorithm_jfx/KeyFrameExample.java
new file mode 100644
--- /dev/null	(date 1713980847947)
+++ b/src/main/java/com/example/algorithm_jfx/KeyFrameExample.java	(date 1713980847947)
@@ -0,0 +1,43 @@
+package com.example.algorithm_jfx;
+
+import javafx.animation.KeyFrame;
+import javafx.animation.Timeline;
+import javafx.application.Application;
+import javafx.scene.Scene;
+import javafx.scene.layout.StackPane;
+import javafx.scene.shape.Rectangle;
+import javafx.stage.Stage;
+import javafx.util.Duration;
+
+public class KeyFrameExample extends Application {
+
+    @Override
+    public void start(Stage primaryStage) {
+        Rectangle rect = new Rectangle(50, 50);
+        StackPane root = new StackPane(rect);
+        Scene scene = new Scene(root, 200, 200);
+        primaryStage.setScene(scene);
+        primaryStage.show();
+
+        // Define KeyFrames for moving the rectangle
+        KeyFrame moveRight = new KeyFrame(Duration.seconds(1), e -> {
+            rect.setTranslateX(rect.getTranslateX() + 50); // Move right
+        });
+
+        KeyFrame moveUp = new KeyFrame(Duration.seconds(2), e -> {
+            rect.setTranslateY(rect.getTranslateY() - 50); // Move up
+        });
+
+        KeyFrame moveLeft = new KeyFrame(Duration.seconds(3), e -> {
+            rect.setTranslateX(rect.getTranslateX() - 50); // Move left
+        });
+
+        // Create a Timeline with the defined KeyFrames
+        Timeline timeline = new Timeline(moveRight, moveUp, moveLeft);
+        timeline.play();
+    }
+
+    public static void main(String[] args) {
+        launch(args);
+    }
+}
\ No newline at end of file
